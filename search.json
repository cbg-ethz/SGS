[{"path":"https://cbg-ethz.github.io/SGS/ReadMe.html","id":"inference-in-bayesian-networks","dir":"","previous_headings":"","what":"Inference in Bayesian Networks","title":"","text":"SGS R package inference Bayesian networks. allows efficient exact approximate inference works low- high-dimensional settings. Efficient marginalization reached splitting calculation sub-calculations lower dimensionality. code implementation paper High-Dimensional Inference Bayesian Networks, arXiv preprint. Implemented exact inference methods: - SubGroupSeparation (fastest) - Junction-tree algorithm - Complete enumeration Implemented approximate inference methods: - SubGroupSeparation (highest accuracy) - Loopy belief propagation - Markov chain Monte Carlo (MCMC) sampling","code":""},{"path":"https://cbg-ethz.github.io/SGS/ReadMe.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"","text":"order install package, suffices launch R CMD INSTALL path//SubGroupSeparation terminal, make install within package source folder. hosted GitHub, possible use install_github tool R session: packages “graph”, “Rgraphviz” “RBGL” need installed BioConductor, hosted CRAN. SGS requires R >= 3.5, depends bitops methods. packages requested order plot graphs, mandatory.","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) install.packages(\"BiocManager\") BiocManager::install(c(\"graph\", \"Rgraphviz\", \"RBGL\"))  library(\"devtools\") install_github(\"cbg-ethz/SubGroupSeparation\")"},{"path":"https://cbg-ethz.github.io/SGS/ReadMe.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"","text":"","code":"library(SGS)  # create BN and label variables  set.seed(6) myBayesNet <- randomBN(3) myBayesNet@variables <- c(\"rain\", \"sprinkler\", \"wet grass\") plot_bn(myBayesNet)  # what's the probability of having rain and wet grass at the same time? # define observed variables and calculate marginal probability myObserved <- list(observed.vars=c(\"rain\", \"wet grass\"), observed.vals=c(2,2)) exactInference(myBayesNet,myObserved)  # another example:  # let's learn the Bayesian network from the \"Asia dataset\" asia_bn <- learn_bn(Asia) plot_bn(asia_bn)  # now we can do the inference on the learned Bayesian network myObserved <- list(observed.vars=c(\"X\", \"D\"), observed.vals=c(1,1)) exactInference(asia_bn, myObserved)"},{"path":"https://cbg-ethz.github.io/SGS/ReadMe.html","id":"benchmark-results","dir":"","previous_headings":"","what":"Benchmark Results","title":"","text":"benchmarked performance SGS method standard inference schemes (Gibbs sampling loopy belief propagation) broad range different Bayesian networks. results summarized Figure (lower better), displaying normalized root mean squared error (NRMSE). reproduce results, run scripts benchmark folder.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/ReadMe.html","id":"reference","dir":"","previous_headings":"","what":"Reference","title":"","text":"find code useful, please consider citing: Fritz M. Bayer, Giusi Moffa, Niko Beerenwinkel, Jack Kuipers. High-Dimensional Inference Bayesian Networks, arXiv preprint, 2021","code":"@article{bayer2021marginalization,   title={High-Dimensional Inference in Bayesian Networks},   author={Bayer, Fritz M and Moffa, Giusi and Beerenwinkel, Niko and Kuipers, Jack},   journal={arXiv preprint arXiv:2112.09217},   year={2021} }"},{"path":"https://cbg-ethz.github.io/SGS/articles/SGS.html","id":"exact-and-approximate-inference-in-bayesian-networks-with-r","dir":"Articles","previous_headings":"","what":"Exact and Approximate Inference in Bayesian Networks with R","title":"SGS","text":"Bayesian networks fundamental tool world machine learning statistics recently gained popularity common model causality. , discuss efficient methods inference Bayesian networks discuss can applied missing data problems. Inference describes calculation marginal probability \\(P(v'|e)\\) fraction variables \\(v' \\V\\) conditioned (typically observed) fraction variables \\(e\\). example, might interested probability rained given grass wet, \\(v':=rain\\) \\(e:=wet\\ grass\\). corresponiding directed acyclic graph (DAG) might look follows:  probability rained? marginal probability mean calculating probability multiple variables, e.g. rain wet grass. ’s probability rain wet grass time? Instead simulating Bayesian network, can also learn data. following example, learn Bayesian network well-known “Asia dataset” subsequently perform inference .  Next, let’s consider high-dimensional problem. Assume, measured 100 genes like know probability 4 particular genes . use exact approximate inference get marginal probability distribution. approximate inference, use efficient SGS algorithm (default) famous loopy belief propagation algorithm reference.","code":"# create random BN and label variables  set.seed(6) myBayesNet <- randomBN(3) myBayesNet@variables <- c(\"rain\", \"sprinkler\", \"wet grass\") plot_bn(myBayesNet) # define observed variables and calculate the probability myObserved <- list(observed.vars=c(\"rain\"), observed.vals=c(2)) exactInference(myBayesNet,myObserved) #> [1] 0.6645466 # define observed variables and calculate the marginal probability myObserved <- list(observed.vars=c(\"rain\", \"wet grass\"), observed.vals=c(2,2)) exactInference(myBayesNet,myObserved) #> [1] 0.4193774 # let's learn the Bayesian network from the \"Asia dataset\" asia_bn <- learn_bn(Asia) #> maximum parent set size is 2  #> core space defined, score table are being computed  #> score tables completed, iterative MCMC is running  #> search space expansion 2 plot_bn(asia_bn) # now we can do the inference on the learned Bayesian network myObserved <- list(observed.vars=c(\"X\", \"D\"), observed.vals=c(1,1)) exactInference(asia_bn, myObserved) #> [1] 0.49438 # create random BN and label variables  set.seed(1) myBayesNet <- randomBN(100) plot_bn(myBayesNet) # what's the probability of having rain and wet grass at the same time? # define observed variables and calculate marginal probability myObserved <- list(observed.vars=c(49,40,44,47), observed.vals=c(2,1,2,1)) exactInference(myBayesNet,myObserved) #> [1] 0.05815955 approxInference(myBayesNet,myObserved) #> [1] 0.05759497"},{"path":"https://cbg-ethz.github.io/SGS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Fritz Bayer. Maintainer.","code":""},{"path":"https://cbg-ethz.github.io/SGS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bayer FM, Moffa G, Beerenwinkel N, Kuipers J (2021). “High-Dimensional Inference Bayesian Networks.” arXiv preprint arXiv:2112.09217. https://arxiv.org/abs/2112.09217.","code":"@Article{,   title = {High-Dimensional Inference in Bayesian Networks},   author = {Fritz M Bayer and Giusi Moffa and Niko Beerenwinkel and Jack Kuipers},   journal = {arXiv preprint arXiv:2112.09217},   year = {2021},   url = {https://arxiv.org/abs/2112.09217}, }"},{"path":"https://cbg-ethz.github.io/SGS/reference/Asia.html","id":null,"dir":"Reference","previous_headings":"","what":"Asia dataset — Asia","title":"Asia dataset — Asia","text":"synthetic dataset Lauritzen Spiegelhalter (1988) lung diseases (tuberculosis, lung cancer bronchitis) visits Asia.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/Asia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asia dataset — Asia","text":"","code":"Asia"},{"path":"https://cbg-ethz.github.io/SGS/reference/Asia.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Asia dataset — Asia","text":"data frame 5000 rows 8 binary variables: D (dyspnoea), binary 1/0 corresponding \"yes\" \"\" T (tuberculosis), binary 1/0 corresponding \"yes\" \"\" L (lung cancer), binary 1/0 corresponding \"yes\" \"\" B (bronchitis), binary 1/0 corresponding \"yes\" \"\" (visit Asia), binary 1/0 corresponding \"yes\" \"\" S (smoking), binary 1/0 corresponding \"yes\" \"\" X (chest X-ray), binary 1/0 corresponding \"yes\" \"\" E (tuberculosis versus lung cancer/bronchitis), binary 1/0 corresponding \"yes\" \"\"","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/Asia.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Asia dataset — Asia","text":"https://www.bnlearn.com/bnrepository/","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/Asia.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Asia dataset — Asia","text":"Lauritzen S, Spiegelhalter D (1988). `Local Computation Probabilities Graphical Structures Application Expert Systems (discussion)'. Journal Royal Statistical Society: Series B 50, 157-224.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/Asiamat.html","id":null,"dir":"Reference","previous_headings":"","what":"Asiamat — Asiamat","title":"Asiamat — Asiamat","text":"adjacency matrix representing ground truth DAG used generate synthetic dataset  Lauritzen Spiegelhalter (1988) lung diseases (tuberculosis, lung cancer bronchitis) visits Asia.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/Asiamat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asiamat — Asiamat","text":"","code":"Asiamat"},{"path":"https://cbg-ethz.github.io/SGS/reference/Asiamat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Asiamat — Asiamat","text":"binary matrix 8 rows 8 columns representing adjacency matrix DAG 8 nodes: D (dyspnoea), binary 1/0 corresponding \"yes\" \"\" T (tuberculosis), binary 1/0 corresponding \"yes\" \"\" L (lung cancer), binary 1/0 corresponding \"yes\" \"\" B (bronchitis), binary 1/0 corresponding \"yes\" \"\" (visit Asia), binary 1/0 corresponding \"yes\" \"\" S (smoking), binary 1/0 corresponding \"yes\" \"\" X (chest X-ray), binary 1/0 corresponding \"yes\" \"\" E (tuberculosis versus lung cancer/bronchitis), binary 1/0 corresponding \"yes\" \"\"","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/Asiamat.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Asiamat — Asiamat","text":"https://www.bnlearn.com/bnrepository/","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/Asiamat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Asiamat — Asiamat","text":"Lauritzen S, Spiegelhalter D (1988). `Local Computation Probabilities Graphical Structures Application Expert Systems (discussion)'. Journal Royal Statistical Society: Series B 50, 157-224.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/BN-class.html","id":null,"dir":"Reference","previous_headings":"","what":"BN class definition. — BN-class","title":"BN class definition. — BN-class","text":"Instantiate BN object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/BN-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BN class definition. — BN-class","text":"","code":"# S4 method for BN initialize(.Object, dataset = NULL, ...)  BN(dataset = NULL, ...)"},{"path":"https://cbg-ethz.github.io/SGS/reference/BN-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BN class definition. — BN-class","text":".Object BN dataset BNDataset object containing dataset network built upon, . remaining parameters considered starting dataset provided. ... potential arguments methods.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/BN-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BN class definition. — BN-class","text":"BN object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/BN-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"BN class definition. — BN-class","text":"constructor may invoked without parameters -- case empty network created, slots filled manually user. usually viable user already knowledge network structure.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/BN-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"BN class definition. — BN-class","text":"name: name network num.nodes: number nodes network variables: names variables network discreteness: TRUE variable discrete, FALSE variable continue node.sizes: variable discrete, node.sizes[] contains cardinality ,      instead discrete value number states variable takes discretized cpts: list conditional probability tables network dag: adjacency matrix network wpdag: weighted partially dag scoring.func: scoring function used structure learning (performed) struct.algo: algorithm used structure learning (performed) num.time.steps: number instants network observed (1, unless Dynamic Bayesian Network) discreteness: TRUE variable discrete, FALSE variable continue","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/BN-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BN class definition. — BN-class","text":"","code":"if (FALSE) { net.1 <- BN()  dataset <- BNDataset() dataset <- read.dataset(dataset, \"file.header\", \"file.data\") net.2 <- BN(dataset) }"},{"path":"https://cbg-ethz.github.io/SGS/reference/BNDataset-class.html","id":null,"dir":"Reference","previous_headings":"","what":"BNDataset class. — BNDataset-class","title":"BNDataset class. — BNDataset-class","text":"Contains data can extracted given dataset: raw data, imputed data, raw imputed data bootstrap.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/BNDataset-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BNDataset class. — BNDataset-class","text":"","code":"BNDataset(data, discreteness, variables = NULL, node.sizes = NULL, ...)  # S4 method for BNDataset initialize(.Object)"},{"path":"https://cbg-ethz.github.io/SGS/reference/BNDataset-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BNDataset class. — BNDataset-class","text":".Object empty BNDataset. data raw data.frame path/name file containing raw dataset (see 'Details'). discreteness vector booleans indicating variables discrete continuous (TRUE FALSE, respectively), path/name file containing header information dataset (discreteness, variable names, cardinality - see 'Details'). variables vector variable names. node.sizes vector variable cardinalities (discrete variables) quantization ranges (continuous variables). ... arguments reading dataset files (see documentation read.dataset).","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/BNDataset-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BNDataset class. — BNDataset-class","text":"BNDataset object. BNDataset object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/BNDataset-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"BNDataset class. — BNDataset-class","text":"two ways build BNDataset: using two files containing respectively header informations data, manually providing data table related header informations (variable names, cardinality discreteness). key informations needed : 1. data; 2. state variables (discrete continuous); 3. names variables; 4. cardinalities variables (discrete), number levels quantized (continuous).  Names cardinalities/leves can guessed looking data, strongly advised provide _all_ informations, order avoid problems later execution. Data can provided form data.frame matrix. can contain NAs. default, NAs indicated '?'; specify different character NAs, possible provide also na.string.symbol parameter. values contained data numeric (real continuous variables, integer discrete ones). default range values discrete variable X [1,|X|], |X| cardinality X. applies levels quantization continuous variables. value ranges data different expected ones, possible specify different starting value (whole dataset) starts.parameter. E.g. starts.=0 assume values variables dataset range [0,|X|-1]. Please keep mind internal representation SGS starts 1, original starting values lost. possible use two files, one data one metadata, instead providing manually info.  SGS requires data files format subsequently described. actual data (text file containing data ) tabular format, one tuple per row, values variable separated space tab. Values variable numbers, starting 1 case discrete variables. Data files can first row containing names corresponding variables. addition data file, header file containing additional informations can also provided. header file composed three rows tab-delimited values: 1. list names variables, order data file; 2. list integers representing cardinality variables, case discrete variables,   number levels variable quantized , case continuous variables; 3. list indicates, variable, variable continuous   (c C), thus quantized learning,   discrete (d D). case need advanced options reading dataset files, please refer documentation read.dataset method. Imputation bootstrap also available separate routines (impute bootstrap, respectively). case evolving system modeled Dynamic Bayesian Network, possible specify  description variables single instant; information replicated num.time.steps instants compose dataset, num.time.steps needs set parameter. case, assumed N variables v1, v2, ..., vN single instant  appear dataset v1_t1, v2_t1, ..., vN_t1, v1_t2, v2_t2, ..., exact order. user can however provide information variables instants; case, name variables edited include instant. case evolving system, num.variables slots refers anyway total number variables observed instants (number columns dataset), single instant.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/BNDataset-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"BNDataset class. — BNDataset-class","text":"name: name dataset header.file: name location header file data.file: name location data file variables: names variables network node.sizes: cardinality variable network num.variables: number variables (columns) dataset discreteness: TRUE variable discrete, FALSE variable continue quantiles: list vectors containing quantiles, one vector per variable. vector NULL variable discrete, contains quantiles continuous num.items: number observations (rows) dataset .raw.data: TRUE dataset contains data read file .imputed.data: TRUE dataset contains imputed data (computed raw data) raw.data: matrix containing raw data imputed.data: matrix containing imputed data .boots: dataset bootstrap samples boots: list bootstrap samples .imputed.boots: dataset imputed bootstrap samples imp.boots: list imputed bootstrap samples num.boots: number bootstrap samples num.time.steps: number instants network observed (1, unless dynamic system)","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/BNDataset-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BNDataset class. — BNDataset-class","text":"","code":"if (FALSE) { # create from files dataset <- BNDataset(\"file.data\", \"file.header\")  # other way: create from raw dataset and metadata data <- matrix(c(1:16), nrow = 4, ncol = 4) dataset <- BNDataset(data = data,                      discreteness = rep('d',4),                      variables = c(\"a\", \"b\", \"c\", \"d\"),                      node.sizes = c(4,8,12,16)) }"},{"path":"https://cbg-ethz.github.io/SGS/reference/InferenceEngine-class.html","id":null,"dir":"Reference","previous_headings":"","what":"InferenceEngine class. — InferenceEngine-class","title":"InferenceEngine class. — InferenceEngine-class","text":"InferenceEngine class. Constructor method InferenceEngine class. constructor InferenceEngine object","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/InferenceEngine-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InferenceEngine class. — InferenceEngine-class","text":"","code":"# S4 method for InferenceEngine initialize(.Object, ...)  InferenceEngine(bn = NULL, observations = NULL, interventions = NULL, ...)"},{"path":"https://cbg-ethz.github.io/SGS/reference/InferenceEngine-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InferenceEngine class. — InferenceEngine-class","text":".Object empty InferenceEngine object. ... potential arguments methods. bn BN object. observations list observations composed two following vectors: observed.vars:vector observed variables; observed.vals:vector values observed variables observed.vars corresponding position. interventions list interventions composed following two vectors: intervention.vars:vector variables intervention performed; intervention.vals:vector values chosen variables intervention.vals corresponding position.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/InferenceEngine-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"InferenceEngine class. — InferenceEngine-class","text":"InferenceEngine object. InferenceEngine object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/InferenceEngine-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"InferenceEngine class. — InferenceEngine-class","text":"junction.tree: junction tree adjacency matrix. num.nodes: number nodes junction tree. cliques: list cliques composing nodes junction tree. triangulated.graph: adjacency matrix original triangulated graph. jpts: inferred joint probability tables. bn: original Bayesian Network (object class BN) provided user, learnt dataset.          NULL missing. updated.bn: Bayesian Network  (object class BN) modified belief propagation computation. particular,          different conditional probability tables respect original version. NULL missing. observed.vars: list observed variables, name number. observed.vals: list observed values corresponding variables observed.vars. intervention.vars: list manipulated variables, name number. intervention.vals: list specified values corresponding variables intervention.vars.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/add.observations-set.html","id":null,"dir":"Reference","previous_headings":"","what":"add further evidence to an existing list of observations of an InferenceEngine. — add.observations<-","title":"add further evidence to an existing list of observations of an InferenceEngine. — add.observations<-","text":"Add list observations InferenceEngine already observations, using list composed two following vectors: observed.varsvector observed variables; observed.valsvector values observed variables observed.vars corresponding position.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/add.observations-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add further evidence to an existing list of observations of an InferenceEngine. — add.observations<-","text":"","code":"add.observations(x) <- value  # S4 method for InferenceEngine add.observations(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/add.observations-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add further evidence to an existing list of observations of an InferenceEngine. — add.observations<-","text":"x InferenceEngine. value list observations InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/add.observations-set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"add further evidence to an existing list of observations of an InferenceEngine. — add.observations<-","text":"case multiple observations variable, last observation one used, recent.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/approxInference.html","id":null,"dir":"Reference","previous_headings":"","what":"Importance Sampling (IS) in Bayesian Networks — approxInference","title":"Importance Sampling (IS) in Bayesian Networks — approxInference","text":"Outputs normalizing constant given evidence Bayesian network","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/approxInference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Importance Sampling (IS) in Bayesian Networks — approxInference","text":"","code":"approxInference(   BayesNet,   obs,   s_method = \"SGS\",   N_samples = 100,   relevantSubNet = FALSE,   plot = TRUE,   returnList = FALSE )"},{"path":"https://cbg-ethz.github.io/SGS/reference/approxInference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Importance Sampling (IS) in Bayesian Networks — approxInference","text":"BayesNet Bayesian network obs List containing evidence nodes associated values s_method Inference method N_samples Number samples relevantSubNet Whether consider relevant subnet plot TRUE, plot results returnList TRUE, return detailed list intermediate results","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/approxInference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Importance Sampling (IS) in Bayesian Networks — approxInference","text":"Normalizing constant vector intermediate results","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/belief.propagation.html","id":null,"dir":"Reference","previous_headings":"","what":"perform belief propagation. — belief.propagation","title":"perform belief propagation. — belief.propagation","text":"Perform belief propagation network InferenceEngine, given set observations. current version SGS, belief propagation can computed junction tree.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/belief.propagation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"perform belief propagation. — belief.propagation","text":"","code":"belief.propagation(ie, observations = NULL, return.potentials = FALSE)  # S4 method for InferenceEngine belief.propagation(ie, observations = NULL, return.potentials = FALSE)"},{"path":"https://cbg-ethz.github.io/SGS/reference/belief.propagation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"perform belief propagation. — belief.propagation","text":"ie InferenceEngine object. observations list observations, consisting two vector, observed.vars observed variables, observed.vals values taken variables listed observed.vars. observations provided, InferenceEngine use ones already contains. return.potentials TRUE potentials returned, instead default BN.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/belief.propagation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"perform belief propagation. — belief.propagation","text":"updated InferenceEngine object.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/benchmarkMultipleNets.html","id":null,"dir":"Reference","previous_headings":"","what":"Benchmark Inference Methods — benchmarkMultipleNets","title":"Benchmark Inference Methods — benchmarkMultipleNets","text":"Outputs benchmark results different inference methods","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/benchmarkMultipleNets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Benchmark Inference Methods — benchmarkMultipleNets","text":"","code":"benchmarkMultipleNets(   N_var,   N_Obs,   N_nets,   N_rep,   N_samples = 100,   samplingMethods = c(\"GS\", \"SGS\", \"LBP\"),   DAGmethod = \"er\",   N_neighbours = 2,   nodeDim = 2 )"},{"path":"https://cbg-ethz.github.io/SGS/reference/benchmarkMultipleNets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Benchmark Inference Methods — benchmarkMultipleNets","text":"N_var number variables N_Obs number observations N_nets number Bayes nets N_rep number repetitions N_samples number samples samplingMethods benchmarked sampling methods DAGmethod DAG method N_neighbours number neighbours nodeDim category size","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/benchmarkMultipleNets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Benchmark Inference Methods — benchmarkMultipleNets","text":"benchmark results","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/bn-method.html","id":null,"dir":"Reference","previous_headings":"","what":"get the BN object contained in an InferenceEngine. — bn","title":"get the BN object contained in an InferenceEngine. — bn","text":"Return network contained InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/bn-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the BN object contained in an InferenceEngine. — bn","text":"","code":"bn(x)  # S4 method for InferenceEngine bn(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/bn-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the BN object contained in an InferenceEngine. — bn","text":"x InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/bn-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the BN object contained in an InferenceEngine. — bn","text":"BN object contained InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/bn-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set the original BN object contained in an InferenceEngine. — bn<-","title":"set the original BN object contained in an InferenceEngine. — bn<-","text":"Add original network InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/bn-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set the original BN object contained in an InferenceEngine. — bn<-","text":"","code":"bn(x) <- value  # S4 method for InferenceEngine bn(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/bn-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set the original BN object contained in an InferenceEngine. — bn<-","text":"x InferenceEngine. value BN object contained InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/boot.html","id":null,"dir":"Reference","previous_headings":"","what":"get selected element of bootstrap list. — boot","title":"get selected element of bootstrap list. — boot","text":"Given BNDataset, return sample corresponding given index.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get selected element of bootstrap list. — boot","text":"","code":"boot(dataset, index, use.imputed.data = FALSE)  # S4 method for BNDataset,numeric boot(dataset, index, use.imputed.data = FALSE)"},{"path":"https://cbg-ethz.github.io/SGS/reference/boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get selected element of bootstrap list. — boot","text":"dataset BNDataset object. index index requested sample. use.imputed.data TRUE samples imputed dataset used. Default FALSE.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/boot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get selected element of bootstrap list. — boot","text":"","code":"if (FALSE) { dataset <- BNDataset(\"file.data\", \"file.header\") dataset <- bootstrap(dataset, num.boots = 1000)  for (i in 1:num.boots(dataset))    print(boot(dataset, i)) }"},{"path":"https://cbg-ethz.github.io/SGS/reference/boots-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set list of bootstrap samples of a BNDataset. — boots<-","title":"set list of bootstrap samples of a BNDataset. — boots<-","text":"Add dataset list samples raw data computed using bootstrap.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/boots-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set list of bootstrap samples of a BNDataset. — boots<-","text":"","code":"boots(x) <- value  # S4 method for BNDataset boots(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/boots-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set list of bootstrap samples of a BNDataset. — boots<-","text":"x BNDataset object. value list bootstrap samples.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/boots.html","id":null,"dir":"Reference","previous_headings":"","what":"get list of bootstrap samples of a BNDataset. — boots","title":"get list of bootstrap samples of a BNDataset. — boots","text":"Return list samples computed raw data dataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/boots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get list of bootstrap samples of a BNDataset. — boots","text":"","code":"boots(x)  # S4 method for BNDataset boots(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/boots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get list of bootstrap samples of a BNDataset. — boots","text":"x BNDataset object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/boots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get list of bootstrap samples of a BNDataset. — boots","text":"list bootstrap samples.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform bootstrap. — bootstrap","title":"Perform bootstrap. — bootstrap","text":"Create list num.boots samples original dataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform bootstrap. — bootstrap","text":"","code":"bootstrap(object, num.boots = 100, seed = 0, imputation = FALSE, k.impute = 10)  # S4 method for BNDataset bootstrap(object, num.boots = 100, seed = 0, imputation = FALSE, k.impute = 10)"},{"path":"https://cbg-ethz.github.io/SGS/reference/bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform bootstrap. — bootstrap","text":"object BNDataset object. num.boots number sampled datasets bootstrap. seed random seed. imputation TRUE imputation performed. Default FALSE. k.impute number neighbours used; discrete variables use mode, continuous variables median value instead taken (useful imputation == TRUE).","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform bootstrap. — bootstrap","text":"","code":"if (FALSE) { dataset <- BNDataset(\"file.data\", \"file.header\") dataset <- bootstrap(dataset, num.boots = 1000) }"},{"path":"https://cbg-ethz.github.io/SGS/reference/build.junction.tree.html","id":null,"dir":"Reference","previous_headings":"","what":"build a JunctionTree. — build.junction.tree","title":"build a JunctionTree. — build.junction.tree","text":"Starting adjacency matrix directed acyclic graph network contained InferenceEngine, build JunctionTree network store InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/build.junction.tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"build a JunctionTree. — build.junction.tree","text":"","code":"build.junction.tree(object, ...)  # S4 method for InferenceEngine build.junction.tree(object, ...)"},{"path":"https://cbg-ethz.github.io/SGS/reference/build.junction.tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"build a JunctionTree. — build.junction.tree","text":"object InferenceEngine object. ... potential arguments methods.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/build.junction.tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"build a JunctionTree. — build.junction.tree","text":"","code":"if (FALSE) { dataset <- BNDataset(\"file.header\", \"file.data\") net <- BN(dataset) eng <- InferenceEngine() eng <- build.junction.tree(eng) }"},{"path":"https://cbg-ethz.github.io/SGS/reference/complete.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a BNDataset to get only complete cases. — complete","title":"Subset a BNDataset to get only complete cases. — complete","text":"Given BNDataset, return copy original object raw.data consists observations contain missing values.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/complete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a BNDataset to get only complete cases. — complete","text":"","code":"complete(x, complete.vars = seq_len(num.variables(x)))  # S4 method for BNDataset complete(x, complete.vars = seq_len(num.variables(x)))"},{"path":"https://cbg-ethz.github.io/SGS/reference/complete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a BNDataset to get only complete cases. — complete","text":"x BNDataset. complete.vars vector containing indices variables considered subsetting; variables included vector can still contain NAs.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/complete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a BNDataset to get only complete cases. — complete","text":"copy original BNDataset containing complete observations.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/complete.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset a BNDataset to get only complete cases. — complete","text":"Non-missingness can required subset variables (default, variables). present, imputed data bootstrap samples eliminated new BNDataset, using method ** using impute bootstrap, may likely loss correspondence subsetted raw.data previously generated imputed.data bootstrap samples.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/convertBNBestieToSGS.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian network Conversion Bestie to SGS format — convertBNBestieToSGS","title":"Bayesian network Conversion Bestie to SGS format — convertBNBestieToSGS","text":"Converts Bayesian network Bestie format SGS format CPTs Bestie created DAGparameters()  DAG Bestie created BiDAG::iterativeMCMC()$DAG","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/convertBNBestieToSGS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian network Conversion Bestie to SGS format — convertBNBestieToSGS","text":"","code":"convertBNBestieToSGS(DAGaugmented)"},{"path":"https://cbg-ethz.github.io/SGS/reference/convertBNBestieToSGS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian network Conversion Bestie to SGS format — convertBNBestieToSGS","text":"DAGaugmented Bayes net type Bestie (created DAGparameters())","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/convertBNBestieToSGS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian network Conversion Bestie to SGS format — convertBNBestieToSGS","text":"Bayes net SGS format","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/convertCPTsBestieToSGS.html","id":null,"dir":"Reference","previous_headings":"","what":"CPTs Conversion Bestie to SGS format — convertCPTsBestieToSGS","title":"CPTs Conversion Bestie to SGS format — convertCPTsBestieToSGS","text":"Converts CPTs Bestie format SGS format","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/convertCPTsBestieToSGS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CPTs Conversion Bestie to SGS format — convertCPTsBestieToSGS","text":"","code":"convertCPTsBestieToSGS(DAGaugmented)"},{"path":"https://cbg-ethz.github.io/SGS/reference/convertCPTsBestieToSGS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CPTs Conversion Bestie to SGS format — convertCPTsBestieToSGS","text":"DAGaugmented CPTs type Bestie (created DAGparameters())","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/convertCPTsBestieToSGS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CPTs Conversion Bestie to SGS format — convertCPTsBestieToSGS","text":"CPTs SGS format","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/cpts-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set the list of conditional probability tables of a network. — cpts<-","title":"set the list of conditional probability tables of a network. — cpts<-","text":"Set list conditional probability tables BN object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/cpts-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set the list of conditional probability tables of a network. — cpts<-","text":"","code":"cpts(x) <- value  # S4 method for BN cpts(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/cpts-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set the list of conditional probability tables of a network. — cpts<-","text":"x object. value list conditional probability tables object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/cpts-set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"set the list of conditional probability tables of a network. — cpts<-","text":"conditional probability table represented multidimensional array.  retrieve single dimensions (e.g. compute marginals), users provide dimensions names.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/cpts.html","id":null,"dir":"Reference","previous_headings":"","what":"get the list of conditional probability tables of a BN. — cpts","title":"get the list of conditional probability tables of a BN. — cpts","text":"Return list conditional probability tables variables BN object. probability table associated corresponding variable, dimensions named according variable represent.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/cpts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the list of conditional probability tables of a BN. — cpts","text":"","code":"cpts(x)  # S4 method for BN cpts(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/cpts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the list of conditional probability tables of a BN. — cpts","text":"x object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/cpts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the list of conditional probability tables of a BN. — cpts","text":"list conditional probability tables desired object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/cpts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get the list of conditional probability tables of a BN. — cpts","text":"conditional probability table represented multidimensional array.  ordering dimensions variable guaranteed follow actual conditional distribution. E.g. dimensions conditional probability P(C|,B) can either (C,,B) (,B,C), depending operations performed, probability table computed. Users rely dimension numbers, instead select dimensions using names.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/dag-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set adjacency matrix of an object. — dag<-","title":"set adjacency matrix of an object. — dag<-","text":"Set adjacency matrix directed acyclic graph representing structure network.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/dag-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set adjacency matrix of an object. — dag<-","text":"","code":"dag(x) <- value  # S4 method for BN dag(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/dag-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set adjacency matrix of an object. — dag<-","text":"x object. value matrix containing adjacency matrix directed acyclic graph representing structure object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/dag.html","id":null,"dir":"Reference","previous_headings":"","what":"get adjacency matrix of a network. — dag","title":"get adjacency matrix of a network. — dag","text":"Return adjacency matrix directed acyclic graph representing structure network.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/dag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get adjacency matrix of a network. — dag","text":"","code":"dag(x)  # S4 method for BN dag(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/dag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get adjacency matrix of a network. — dag","text":"x object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/dag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get adjacency matrix of a network. — dag","text":"matrix containing adjacency matrix directed acyclic graph representing         structure object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/dag.to.cpdag.html","id":null,"dir":"Reference","previous_headings":"","what":"convert a DAG to a CPDAG — dag.to.cpdag","title":"convert a DAG to a CPDAG — dag.to.cpdag","text":"Convert adjacency matrix representing DAG BN adjacency matrix representing CPDAG network.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/dag.to.cpdag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert a DAG to a CPDAG — dag.to.cpdag","text":"","code":"dag.to.cpdag(dag.adj.matrix, layering = NULL)"},{"path":"https://cbg-ethz.github.io/SGS/reference/dag.to.cpdag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert a DAG to a CPDAG — dag.to.cpdag","text":"dag.adj.matrix adjacency matrix representing DAG BN. layering vector containing layers node belongs .","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/dag.to.cpdag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert a DAG to a CPDAG — dag.to.cpdag","text":"adjacency matrix representing CPDAG network.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/dag.to.cpdag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert a DAG to a CPDAG — dag.to.cpdag","text":"","code":"if (FALSE) { net <- learn.network(dataset, layering=layering) pdag <- dag.to.cpdag(dag(net), layering) wpdag(net) <- pdag }"},{"path":"https://cbg-ethz.github.io/SGS/reference/data.file-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set data file of a BNDataset. — data.file<-","title":"set data file of a BNDataset. — data.file<-","text":"Set data filename dataset (path position, given user). data filename may contain header first row, containing list names variables, order header file. header, present, file contains data.frame observations, one item per row.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/data.file-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set data file of a BNDataset. — data.file<-","text":"","code":"data.file(x) <- value  # S4 method for BNDataset data.file(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/data.file-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set data file of a BNDataset. — data.file<-","text":"x BNDataset. value data filename.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/data.file.html","id":null,"dir":"Reference","previous_headings":"","what":"get data file of a BNDataset. — data.file","title":"get data file of a BNDataset. — data.file","text":"Return data filename dataset (path position, given user). data filename may contain header first row, containing list names variables, order header file. header, present, file contains data.frame observations, one item per row.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/data.file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get data file of a BNDataset. — data.file","text":"","code":"data.file(x)  # S4 method for BNDataset data.file(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/data.file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get data file of a BNDataset. — data.file","text":"x BNDataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/data.file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get data file of a BNDataset. — data.file","text":"data filename dataset.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/discreteness-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set status (discrete or continuous) of the variables of an object. — discreteness<-","title":"set status (discrete or continuous) of the variables of an object. — discreteness<-","text":"Set list variable status variables network dataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/discreteness-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set status (discrete or continuous) of the variables of an object. — discreteness<-","text":"","code":"discreteness(x) <- value  # S4 method for BN discreteness(x) <- value  # S4 method for BNDataset discreteness(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/discreteness-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set status (discrete or continuous) of the variables of an object. — discreteness<-","text":"x object. value vector elements {c,d} continuous discrete variables (respectively).","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/discreteness.html","id":null,"dir":"Reference","previous_headings":"","what":"get status (discrete or continuous) of the variables of an object. — discreteness","title":"get status (discrete or continuous) of the variables of an object. — discreteness","text":"Get vector representing status variables (names) BN BNDataset. Elements vector c variable continue, d variable discrete.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/discreteness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get status (discrete or continuous) of the variables of an object. — discreteness","text":"","code":"discreteness(x)  # S4 method for BN discreteness(x)  # S4 method for BNDataset discreteness(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/discreteness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get status (discrete or continuous) of the variables of an object. — discreteness","text":"x object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/discreteness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get status (discrete or continuous) of the variables of an object. — discreteness","text":"vector contaning, variable desired object,  c variable continue, d variable discrete.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/edge.dir.wpdag.html","id":null,"dir":"Reference","previous_headings":"","what":"counts the edges in a WPDAG with their directionality — edge.dir.wpdag","title":"counts the edges in a WPDAG with their directionality — edge.dir.wpdag","text":"Given BN WPDAG, counts edges, directionality.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/edge.dir.wpdag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"counts the edges in a WPDAG with their directionality — edge.dir.wpdag","text":"","code":"edge.dir.wpdag(x, use.node.names = TRUE)"},{"path":"https://cbg-ethz.github.io/SGS/reference/edge.dir.wpdag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"counts the edges in a WPDAG with their directionality — edge.dir.wpdag","text":"x BN use.node.names use node names rather number (TRUE default).","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/edge.dir.wpdag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"counts the edges in a WPDAG with their directionality — edge.dir.wpdag","text":"matrix containing node pairs count edges         WPDAG.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/em.html","id":null,"dir":"Reference","previous_headings":"","what":"expectation-maximization algorithm. — em","title":"expectation-maximization algorithm. — em","text":"Learn parameters network using Expectation-Maximization algorithm.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/em.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"expectation-maximization algorithm. — em","text":"","code":"em(x, dataset, threshold = 0.001, max.em.iterations = 10, ess = 1)  # S4 method for InferenceEngine,BNDataset em(x, dataset, threshold = 0.001, max.em.iterations = 10, ess = 1)"},{"path":"https://cbg-ethz.github.io/SGS/reference/em.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"expectation-maximization algorithm. — em","text":"x InferenceEngine. dataset observed dataset missing values Bayesian Network x. threshold threshold convergence, used stopping criterion. max.em.iterations maximum number iterations run case convergence. ess Equivalent Sample Size value.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/em.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"expectation-maximization algorithm. — em","text":"list containing: InferenceEngine new updated network (\"InferenceEngine\"),         imputed dataset (\"BNDataset\").","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/em.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"expectation-maximization algorithm. — em","text":"","code":"if (FALSE) { em(x, dataset) }"},{"path":"https://cbg-ethz.github.io/SGS/reference/exactInference.html","id":null,"dir":"Reference","previous_headings":"","what":"Exact inference via SupGroupSeparation — exactInference","title":"Exact inference via SupGroupSeparation — exactInference","text":"Outputs marginal probability","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/exactInference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exact inference via SupGroupSeparation — exactInference","text":"","code":"exactInference(BayesNet, obs)"},{"path":"https://cbg-ethz.github.io/SGS/reference/exactInference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exact inference via SupGroupSeparation — exactInference","text":"BayesNet Bayesian network type bn.fit obs observation","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/exactInference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exact inference via SupGroupSeparation — exactInference","text":"marginal probability","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/exactInference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exact inference via SupGroupSeparation — exactInference","text":"","code":"if (FALSE) { # create random BN and label variables  set.seed(6) myBayesNet <- randomBN(3) myBayesNet@variables <- c(\"rain\", \"sprinkler\", \"wet grass\") plot(myBayesNet)  # what's the probability of having rain? # define observed variables and calculate marginal probability myObserved <- list(observed.vars=c(\"rain\"), observed.vals=c(2)) exactInference(myBayesNet,myObserved)  # what's the probability of having rain and wet grass at the same time? # define observed variables and calculate marginal probability myObserved <- list(observed.vars=c(\"rain\", \"wet grass\"), observed.vals=c(2,2)) exactInference(myBayesNet,myObserved) }"},{"path":"https://cbg-ethz.github.io/SGS/reference/get.allAncestors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get relevant DAG nodes (ancestors) — get.allAncestors","title":"Get relevant DAG nodes (ancestors) — get.allAncestors","text":"Outputs relevant subnetwork Bayesian network given evidence","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/get.allAncestors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get relevant DAG nodes (ancestors) — get.allAncestors","text":"","code":"get.allAncestors(dag, A)"},{"path":"https://cbg-ethz.github.io/SGS/reference/get.allAncestors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get relevant DAG nodes (ancestors) — get.allAncestors","text":"dag DAG permutation matrix vector containing evidence nodes (order: 1 instead \"\")","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/get.allAncestors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get relevant DAG nodes (ancestors) — get.allAncestors","text":"relevant DAG","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/get.allSubGroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Conditionally Independent Subgroups (CIS) — get.allSubGroups","title":"Get All Conditionally Independent Subgroups (CIS) — get.allSubGroups","text":"Outputs CISs Bayesian network given evidence","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/get.allSubGroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Conditionally Independent Subgroups (CIS) — get.allSubGroups","text":"","code":"get.allSubGroups(DAG, evidenceNodes, visualize = FALSE)"},{"path":"https://cbg-ethz.github.io/SGS/reference/get.allSubGroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All Conditionally Independent Subgroups (CIS) — get.allSubGroups","text":"DAG DAG evidenceNodes vector containing evidence nodes visualize TRUE, plot graph","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/get.allSubGroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Conditionally Independent Subgroups (CIS) — get.allSubGroups","text":"list CIS Bayesian network given evidence","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/get.most.probable.values.html","id":null,"dir":"Reference","previous_headings":"","what":"compute the most probable values to be observed. — get.most.probable.values","title":"compute the most probable values to be observed. — get.most.probable.values","text":"Return array containing values variable network likely take, according CPTS. case ties take first value.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/get.most.probable.values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute the most probable values to be observed. — get.most.probable.values","text":"","code":"get.most.probable.values(x, prev.values = NULL)  # S4 method for BN get.most.probable.values(x, prev.values = NULL)  # S4 method for InferenceEngine get.most.probable.values(x, prev.values = NULL)"},{"path":"https://cbg-ethz.github.io/SGS/reference/get.most.probable.values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute the most probable values to be observed. — get.most.probable.values","text":"x BN InferenceEngine object. prev.values vector size num.nodes containing existing observation complete (NULL none).","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/get.most.probable.values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute the most probable values to be observed. — get.most.probable.values","text":"array containing, position, probable value corresponding variable.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/get.most.probable.values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"compute the most probable values to be observed. — get.most.probable.values","text":"","code":"if (FALSE) { # try with a BN object x get.most.probable.values(x)  # now build an InferenceEngine object eng <- InferenceEngine(x) get.most.probable.values(eng) }"},{"path":"https://cbg-ethz.github.io/SGS/reference/get.subGroup.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Conditionally Independent Subgroup (CIS) — get.subGroup","title":"Get Conditionally Independent Subgroup (CIS) — get.subGroup","text":"Outputs corresponding CIS specific node Bayesian network given evidence","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/get.subGroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Conditionally Independent Subgroup (CIS) — get.subGroup","text":"","code":"get.subGroup(DAG, evidenceNodes, startNode)"},{"path":"https://cbg-ethz.github.io/SGS/reference/get.subGroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Conditionally Independent Subgroup (CIS) — get.subGroup","text":"DAG Bayesian network type bn.fit evidenceNodes vector containing evidence nodes startNode node contained subgroup","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/get.subGroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Conditionally Independent Subgroup (CIS) — get.subGroup","text":"nodes corresponding CIS","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/has.boots.html","id":null,"dir":"Reference","previous_headings":"","what":"check whether a BNDataset has bootstrap samples or not. — has.boots","title":"check whether a BNDataset has bootstrap samples or not. — has.boots","text":"Return TRUE given dataset contains samples bootstrap, FALSE otherwise.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/has.boots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check whether a BNDataset has bootstrap samples or not. — has.boots","text":"","code":"has.boots(x)  # S4 method for BNDataset has.boots(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/has.boots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check whether a BNDataset has bootstrap samples or not. — has.boots","text":"x BNDataset object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/has.boots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check whether a BNDataset has bootstrap samples or not. — has.boots","text":"TRUE dataset bootstrap samples.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/has.imputed.boots.html","id":null,"dir":"Reference","previous_headings":"","what":"check whether a BNDataset has bootstrap samples from imputed data or not. — has.imputed.boots","title":"check whether a BNDataset has bootstrap samples from imputed data or not. — has.imputed.boots","text":"Return TRUE given dataset contains samples bootstrap inputed dataset, FALSE otherwise.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/has.imputed.boots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check whether a BNDataset has bootstrap samples from imputed data or not. — has.imputed.boots","text":"","code":"has.imputed.boots(x)  # S4 method for BNDataset has.imputed.boots(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/has.imputed.boots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check whether a BNDataset has bootstrap samples from imputed data or not. — has.imputed.boots","text":"x BNDataset object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/has.imputed.boots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check whether a BNDataset has bootstrap samples from imputed data or not. — has.imputed.boots","text":"TRUE dataset bootstrap samples imputed data.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/has.imputed.data.html","id":null,"dir":"Reference","previous_headings":"","what":"check if a BNDataset contains impited data. — has.imputed.data","title":"check if a BNDataset contains impited data. — has.imputed.data","text":"Check whether BNDataset object actually contains imputed data.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/has.imputed.data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if a BNDataset contains impited data. — has.imputed.data","text":"","code":"has.imputed.data(x)  # S4 method for BNDataset has.imputed.data(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/has.imputed.data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if a BNDataset contains impited data. — has.imputed.data","text":"x BNDataset.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/has.imputed.data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check if a BNDataset contains impited data. — has.imputed.data","text":"","code":"if (FALSE) { x <- BNDataset() has.imputed.data(x) # FALSE  x <- read.dataset(x, \"file.header\", \"file.data\") has.imputed.data(x) # FALSE, since read.dataset() actually reads raw data.  x <- impute(x) has.imputed.data(x) # TRUE }"},{"path":"https://cbg-ethz.github.io/SGS/reference/has.raw.data.html","id":null,"dir":"Reference","previous_headings":"","what":"check if a BNDataset contains raw data. — has.raw.data","title":"check if a BNDataset contains raw data. — has.raw.data","text":"Check whether BNDataset object actually contains raw data.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/has.raw.data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if a BNDataset contains raw data. — has.raw.data","text":"","code":"has.raw.data(x)  # S4 method for BNDataset has.raw.data(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/has.raw.data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if a BNDataset contains raw data. — has.raw.data","text":"x BNDataset.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/has.raw.data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check if a BNDataset contains raw data. — has.raw.data","text":"","code":"if (FALSE) { x <- BNDataset() has.raw.data(x) # FALSE  x <- read.dataset(x, \"file.header\", \"file.data\") has.raw.data(x) # TRUE, since read.dataset() actually reads raw data. }"},{"path":"https://cbg-ethz.github.io/SGS/reference/header.file-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set header file of a BNDataset. — header.file<-","title":"set header file of a BNDataset. — header.file<-","text":"Set header filename dataset (path position, given user). header file contain three rows: list names variables, order data file; list cardinalities variables, discrete, levels quantization continuous; list status variables: c continuous variables, d discrete ones. rows ignored.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/header.file-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set header file of a BNDataset. — header.file<-","text":"","code":"header.file(x) <- value  # S4 method for BNDataset header.file(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/header.file-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set header file of a BNDataset. — header.file<-","text":"x BNDataset. value header filename.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/header.file.html","id":null,"dir":"Reference","previous_headings":"","what":"get header file of a BNDataset. — header.file","title":"get header file of a BNDataset. — header.file","text":"Return header filename dataset (path position, given user), present dataset read file manually inserted. header file contains three rows: list names variables, order data file; list cardinalities variables, discrete, levels quantization continuous; list status variables: c continuous variables, d discrete ones.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/header.file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get header file of a BNDataset. — header.file","text":"","code":"header.file(x)  # S4 method for BNDataset header.file(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/header.file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get header file of a BNDataset. — header.file","text":"x BNDataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/header.file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get header file of a BNDataset. — header.file","text":"header filename dataset.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/imp.boots-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set list of bootstrap samples from imputed data of a BNDataset. — imp.boots<-","title":"set list of bootstrap samples from imputed data of a BNDataset. — imp.boots<-","text":"Add dataset list samples imputed data computed using bootstrap.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/imp.boots-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set list of bootstrap samples from imputed data of a BNDataset. — imp.boots<-","text":"","code":"imp.boots(x) <- value  # S4 method for BNDataset imp.boots(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/imp.boots-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set list of bootstrap samples from imputed data of a BNDataset. — imp.boots<-","text":"x BNDataset object. value list bootstrap samples imputed data.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/imp.boots.html","id":null,"dir":"Reference","previous_headings":"","what":"get list of bootstrap samples from imputed data of a BNDataset. — imp.boots","title":"get list of bootstrap samples from imputed data of a BNDataset. — imp.boots","text":"Return list samples computed raw data dataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/imp.boots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get list of bootstrap samples from imputed data of a BNDataset. — imp.boots","text":"","code":"imp.boots(x)  # S4 method for BNDataset imp.boots(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/imp.boots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get list of bootstrap samples from imputed data of a BNDataset. — imp.boots","text":"x BNDataset object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/imp.boots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get list of bootstrap samples from imputed data of a BNDataset. — imp.boots","text":"list bootstrap samples imputed data.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute a BNDataset raw data with missing values. — impute","title":"Impute a BNDataset raw data with missing values. — impute","text":"Impute BNDataset raw data missing values.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute a BNDataset raw data with missing values. — impute","text":"","code":"impute(object, k.impute = 10)  # S4 method for BNDataset impute(object, k.impute = 10)"},{"path":"https://cbg-ethz.github.io/SGS/reference/impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute a BNDataset raw data with missing values. — impute","text":"object BNDataset object. k.impute number neighbours used; discrete variables use mode, continuous variables median value instead taken.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/impute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute a BNDataset raw data with missing values. — impute","text":"","code":"if (FALSE) { dataset <- BNDataset(\"file.data\", \"file.header\") dataset <- impute(dataset) }"},{"path":"https://cbg-ethz.github.io/SGS/reference/imputed.data-set.html","id":null,"dir":"Reference","previous_headings":"","what":"add imputed data. — imputed.data<-","title":"add imputed data. — imputed.data<-","text":"Insert imputed data BNDataset object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/imputed.data-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add imputed data. — imputed.data<-","text":"","code":"imputed.data(x) <- value  # S4 method for BNDataset imputed.data(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/imputed.data-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add imputed data. — imputed.data<-","text":"x BNDataset. value matrix integers containing dataset.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/imputed.data.html","id":null,"dir":"Reference","previous_headings":"","what":"get imputed data of a BNDataset. — imputed.data","title":"get imputed data of a BNDataset. — imputed.data","text":"Return imputed data contained BNDataset object, .","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/imputed.data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get imputed data of a BNDataset. — imputed.data","text":"","code":"imputed.data(x)  # S4 method for BNDataset imputed.data(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/imputed.data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get imputed data of a BNDataset. — imputed.data","text":"x BNDataset.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/interventions-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set the list of interventions for an InferenceEngine. — interventions<-","title":"set the list of interventions for an InferenceEngine. — interventions<-","text":"Add list interventions InferenceEngine, using list composed two following vectors: intervention.varsvector variables manipulate; intervention.valsvector values variables observed.vars corresponding position.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/interventions-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set the list of interventions for an InferenceEngine. — interventions<-","text":"","code":"interventions(x) <- value  # S4 method for InferenceEngine interventions(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/interventions-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set the list of interventions for an InferenceEngine. — interventions<-","text":"x InferenceEngine. value list interventions InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/interventions-set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"set the list of interventions for an InferenceEngine. — interventions<-","text":"intervention can applied building InferenceEngine. case multiple interventions variable, last intervention one used.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/interventions.html","id":null,"dir":"Reference","previous_headings":"","what":"get the list of interventions of an InferenceEngine. — interventions","title":"get the list of interventions of an InferenceEngine. — interventions","text":"Return list interventions added InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/interventions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the list of interventions of an InferenceEngine. — interventions","text":"","code":"interventions(x)  # S4 method for InferenceEngine interventions(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/interventions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the list of interventions of an InferenceEngine. — interventions","text":"x InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/interventions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the list of interventions of an InferenceEngine. — interventions","text":"list interventions InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/interventions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get the list of interventions of an InferenceEngine. — interventions","text":"Output list following format: intervention.varsvector manipulated variables; intervention.valsvector values variables observed.vars corresponding position.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/jpts-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set the list of joint probability tables compiled by an InferenceEngine. — jpts<-","title":"set the list of joint probability tables compiled by an InferenceEngine. — jpts<-","text":"Add list joint probability tables cliques junction tree.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/jpts-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set the list of joint probability tables compiled by an InferenceEngine. — jpts<-","text":"","code":"jpts(x) <- value  # S4 method for InferenceEngine jpts(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/jpts-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set the list of joint probability tables compiled by an InferenceEngine. — jpts<-","text":"x InferenceEngine. value list joint probability tables compiled InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/jpts-set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"set the list of joint probability tables compiled by an InferenceEngine. — jpts<-","text":"joint probability table represented multidimensional array.  retrieve single dimensions (e.g. compute marginals), users provide dimension names.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/jpts.html","id":null,"dir":"Reference","previous_headings":"","what":"get the list of joint probability tables compiled by an InferenceEngine. — jpts","title":"get the list of joint probability tables compiled by an InferenceEngine. — jpts","text":"Return list joint probability tables cliques junction tree  obtained belief propagation performed.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/jpts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the list of joint probability tables compiled by an InferenceEngine. — jpts","text":"","code":"jpts(x)  # S4 method for InferenceEngine jpts(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/jpts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the list of joint probability tables compiled by an InferenceEngine. — jpts","text":"x InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/jpts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the list of joint probability tables compiled by an InferenceEngine. — jpts","text":"list joint probability tables compiled InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/jpts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get the list of joint probability tables compiled by an InferenceEngine. — jpts","text":"joint probability table represented multidimensional array.  retrieve single dimensions (e.g. compute marginals), users rely dimension numbers, instead select dimensions using names.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/jt.cliques-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set the list of cliques of the junction tree of an InferenceEngine. — jt.cliques<-","title":"set the list of cliques of the junction tree of an InferenceEngine. — jt.cliques<-","text":"Add InferenceEngine list containing cliques variables composing nodes junction tree.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/jt.cliques-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set the list of cliques of the junction tree of an InferenceEngine. — jt.cliques<-","text":"","code":"jt.cliques(x) <- value  # S4 method for InferenceEngine jt.cliques(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/jt.cliques-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set the list of cliques of the junction tree of an InferenceEngine. — jt.cliques<-","text":"x InferenceEngine. value list cliques junction tree contained InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/jt.cliques.html","id":null,"dir":"Reference","previous_headings":"","what":"get the list of cliques of the junction tree of an InferenceEngine. — jt.cliques","title":"get the list of cliques of the junction tree of an InferenceEngine. — jt.cliques","text":"Return list cliques containing variables associated node junction tree.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/jt.cliques.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the list of cliques of the junction tree of an InferenceEngine. — jt.cliques","text":"","code":"jt.cliques(x)  # S4 method for InferenceEngine jt.cliques(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/jt.cliques.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the list of cliques of the junction tree of an InferenceEngine. — jt.cliques","text":"x InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/jt.cliques.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the list of cliques of the junction tree of an InferenceEngine. — jt.cliques","text":"list cliques junction tree contained InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/junction.tree-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set the junction tree of an InferenceEngine. — junction.tree<-","title":"set the junction tree of an InferenceEngine. — junction.tree<-","text":"Set adjacency matrix junction tree computed network.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/junction.tree-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set the junction tree of an InferenceEngine. — junction.tree<-","text":"","code":"junction.tree(x) <- value  # S4 method for InferenceEngine junction.tree(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/junction.tree-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set the junction tree of an InferenceEngine. — junction.tree<-","text":"x InferenceEngine. value junction tree inserted InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/junction.tree.html","id":null,"dir":"Reference","previous_headings":"","what":"get the junction tree of an InferenceEngine. — junction.tree","title":"get the junction tree of an InferenceEngine. — junction.tree","text":"Return adjacency matrix representing junction tree computed network.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/junction.tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the junction tree of an InferenceEngine. — junction.tree","text":"","code":"junction.tree(x)  # S4 method for InferenceEngine junction.tree(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/junction.tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the junction tree of an InferenceEngine. — junction.tree","text":"x InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/junction.tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the junction tree of an InferenceEngine. — junction.tree","text":"junction tree contained InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/junction.tree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get the junction tree of an InferenceEngine. — junction.tree","text":"Rows columns named (variables ) cliques node junction tree represent.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/knn.impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform imputation of a data frame using k-NN. — knn.impute","title":"Perform imputation of a data frame using k-NN. — knn.impute","text":"Perform imputation missing data data frame using k-Nearest Neighbour algorithm. discrete variables use mode, continuous variables median value instead taken.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/knn.impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform imputation of a data frame using k-NN. — knn.impute","text":"","code":"knn.impute(   data,   k = 10,   cat.var = 1:ncol(data),   to.impute = 1:nrow(data),   using = 1:nrow(data) )"},{"path":"https://cbg-ethz.github.io/SGS/reference/knn.impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform imputation of a data frame using k-NN. — knn.impute","text":"data numerical matrix. k number neighbours used; categorical variables  mode neighbours used, continuous variables  median value used instead. Default: 10. cat.var vector containing indices variables  considered categorical. Default: variables. .impute vector indicating rows dataset imputed.  Default: impute rows. using vector indicating rows dataset used  search neighbours. Default: use rows.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/knn.impute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform imputation of a data frame using k-NN. — knn.impute","text":"imputed matrix.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/layering.html","id":null,"dir":"Reference","previous_headings":"","what":"return the layering of the nodes. — layering","title":"return the layering of the nodes. — layering","text":"Compute topological ordering nodes network, order divide network layers.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/layering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"return the layering of the nodes. — layering","text":"","code":"layering(x)  # S4 method for BN layering(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/layering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"return the layering of the nodes. — layering","text":"x BN object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/layering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"return the layering of the nodes. — layering","text":"vector containing layers nodes can divided .","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/layering.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"return the layering of the nodes. — layering","text":"","code":"if (FALSE) { dataset <- BNDataset(\"file.header\", \"file.data\") x <- BN(dataset) x <- learn.network(x, dataset) layering(x) }"},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.dynamic.network.html","id":null,"dir":"Reference","previous_headings":"","what":"learn a dynamic network (structure and parameters) of a BN from a BNDataset. — learn.dynamic.network","title":"learn a dynamic network (structure and parameters) of a BN from a BNDataset. — learn.dynamic.network","text":"Learn dynamic network (structure parameters) BN BNDataset (see Details section). method wrapper learn.network simplify learning dynamic network. provides automated generation layering required represent set time constraints encoded dynamic network. function, assumed dataset contains observations variable time steps: V_1^{t_1}, V_2^{t_1}, V_n^{t_1}, V_1^{t_2}, ... , V_n^{t_k}. Variables time step j can parents variable time steps k>=j, variables <j. layering provided time step, valid time step, throughout whole dynamic network; global layering can however provided.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.dynamic.network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"learn a dynamic network (structure and parameters) of a BN from a BNDataset. — learn.dynamic.network","text":"","code":"learn.dynamic.network(x, ...)  # S4 method for BN learn.dynamic.network(   x,   y = NULL,   num.time.steps = num.time.steps(y),   algo = \"mmhc\",   scoring.func = \"BDeu\",   initial.network = NULL,   alpha = 0.05,   ess = 1,   bootstrap = FALSE,   layering = c(),   max.fanin = num.variables(y) - 1,   max.fanin.layers = NULL,   max.parents = num.variables(y) - 1,   max.parents.layers = NULL,   layer.struct = NULL,   cont.nodes = c(),   use.imputed.data = FALSE,   use.cpc = TRUE,   mandatory.edges = NULL,   ... )  # S4 method for BNDataset learn.dynamic.network(   x,   num.time.steps = num.time.steps(x),   algo = \"mmhc\",   scoring.func = \"BDeu\",   initial.network = NULL,   alpha = 0.05,   ess = 1,   bootstrap = FALSE,   layering = c(),   max.fanin = num.variables(x) - 1,   max.fanin.layers = NULL,   max.parents = num.variables(x) - 1,   max.parents.layers = NULL,   layer.struct = NULL,   cont.nodes = c(),   use.imputed.data = FALSE,   use.cpc = TRUE,   mandatory.edges = NULL,   ... )"},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.dynamic.network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"learn a dynamic network (structure and parameters) of a BN from a BNDataset. — learn.dynamic.network","text":"x can BN BNDataset. x BN, also dataset parameter must given. ... potential arguments methods. y BNDataset object, provided x BN. num.time.steps number time steps represented dynamic BN. algo algorithm use. Currently, one among sm (Silander-Myllymaki), mmpc (Max-Min Parent--Children), mmhc (Max-Min Hill Climbing, default), hc (Hill Climbing) sem (Structural Expectation Maximization). scoring.func scoring function use. Currently, one among BDeu, AIC, BIC. initial.network network structure used starting point structure search. Can take different values: BN object, matrix containing adjacency matrix structure network, string random.chain sample random chain starting point. alpha confidence threshold (mmhc). ess Equivalent Sample Size value. bootstrap TRUE use bootstrap samples. layering vector containing layers node belongs . max.fanin maximum number parents node (hc, mmhc). max.fanin.layers matrix available parents layer (sm -- DEPRECATED, use max.parents.layers instead). max.parents maximum number parents node (sm, hc, mmhc). max.parents.layers matrix available parents layer (sm). layer.struct 0/1 matrix indicating layers can contain parent nodes nodes layer (mmhc, mmpc). cont.nodes vector containing index continuous variables. use.imputed.data TRUE learn structure imputed dataset (available, check performed). Default use raw dataset use.cpc (using mmhc) compute Candidate Parent--Children sets instead  starting Hill Climbing empty graph. mandatory.edges binary matrix, 1 cell [,j] indicates edge node node j must present final network.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.dynamic.network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"learn a dynamic network (structure and parameters) of a BN from a BNDataset. — learn.dynamic.network","text":"new BN object structure (DAG) conditional probabilities learnt given dataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.dynamic.network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"learn a dynamic network (structure and parameters) of a BN from a BNDataset. — learn.dynamic.network","text":"parameters available ones learn.network, refer documentation function  details. See also documentation learn.structure learn.params informations.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.dynamic.network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"learn a dynamic network (structure and parameters) of a BN from a BNDataset. — learn.dynamic.network","text":"","code":"if (FALSE) { mydataset <- BNDataset(\"data.file\", \"header.file\")  net <- learn.dynamic.network(mydataset, num.time.steps=2) }"},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.network.html","id":null,"dir":"Reference","previous_headings":"","what":"learn a network (structure and parameters) of a BN from a BNDataset. — learn.network","title":"learn a network (structure and parameters) of a BN from a BNDataset. — learn.network","text":"Learn network (structure parameters) BN BNDataset (see Details section).","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"learn a network (structure and parameters) of a BN from a BNDataset. — learn.network","text":"","code":"learn.network(x, ...)  # S4 method for BN learn.network(   x,   y = NULL,   algo = \"mmhc\",   scoring.func = \"BDeu\",   initial.network = NULL,   alpha = 0.05,   ess = 1,   bootstrap = FALSE,   layering = c(),   max.fanin = num.variables(y) - 1,   max.fanin.layers = NULL,   max.parents = num.variables(y) - 1,   max.parents.layers = NULL,   layer.struct = NULL,   cont.nodes = c(),   use.imputed.data = FALSE,   use.cpc = TRUE,   mandatory.edges = NULL,   ... )  # S4 method for BNDataset learn.network(   x,   algo = \"mmhc\",   scoring.func = \"BDeu\",   initial.network = NULL,   alpha = 0.05,   ess = 1,   bootstrap = FALSE,   layering = c(),   max.fanin = num.variables(x) - 1,   max.fanin.layers = NULL,   max.parents = num.variables(x) - 1,   max.parents.layers = NULL,   layer.struct = NULL,   cont.nodes = c(),   use.imputed.data = FALSE,   use.cpc = TRUE,   mandatory.edges = NULL,   ... )"},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"learn a network (structure and parameters) of a BN from a BNDataset. — learn.network","text":"x can BN BNDataset. x BN, also dataset parameter must given. ... potential arguments methods. y BNDataset object, provided x BN. algo algorithm use. Currently, one among sm (Silander-Myllymaki), mmpc (Max-Min Parent--Children), mmhc (Max-Min Hill Climbing, default), hc (Hill Climbing) sem (Structural Expectation Maximization). scoring.func scoring function use. Currently, one among BDeu, AIC, BIC. initial.network network structure used starting point structure search. Can take different values: BN object, matrix containing adjacency matrix structure network, string random.chain sample random chain starting point. alpha confidence threshold (mmhc). ess Equivalent Sample Size value. bootstrap TRUE use bootstrap samples. layering vector containing layers node belongs . max.fanin maximum number parents node (hc, mmhc). max.fanin.layers matrix available parents layer (sm -- DEPRECATED, use max.parents.layers instead). max.parents maximum number parents node (sm, hc, mmhc). max.parents.layers matrix available parents layer (sm). layer.struct 0/1 matrix indicating layers can contain parent nodes nodes layer (mmhc, mmpc). cont.nodes vector containing index continuous variables. use.imputed.data TRUE learn structure imputed dataset (available, check performed). Default use raw dataset use.cpc (using mmhc) compute Candidate Parent--Children sets instead  starting Hill Climbing empty graph. mandatory.edges binary matrix, 1 cell [,j] indicates edge node node j must present final network.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"learn a network (structure and parameters) of a BN from a BNDataset. — learn.network","text":"new BN object structure (DAG) conditional probabilities learnt given dataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"learn a network (structure and parameters) of a BN from a BNDataset. — learn.network","text":"Learn structure (directed acyclic graph) BN object according BNDataset. provide five algorithms learning structure network, can chosen algo parameter. first one Silander-Myllym\\\"aki (sm) exact search--score algorithm, performs complete evaluation search space order discover best network; algorithm may take long time, can inapplicable discovering networks 25--30 nodes. Even small networks, users strongly encouraged provide meaningful parameters layering nodes, maximum number parents -- refer  documentation package manual details method parameters. second method constraint-based Max-Min Parents--Children (mmpc), returns skeleton network. Given possible presence loops, due non-directionality edges discovered, parameter learning possible using algorithm. Also note case dense network lots obsevations, statistical evaluation search space may take long time. Also algorithm parameters may need tuned, mainly confidence threshold statistical pruning. Please refer rest documentation explanation. third algorithm another heuristic, Hill-Climbing (hc). can start complete space possibilities (default) reduced subset possible edges, using cpc argument. fourth algorithm (default one) Max-Min Hill-Climbing heuristic (mmhc), performs statistical sieving search space followed greedy evaluation, combining MMPC HC algorithms. considerably faster complete method, cost (likely) lower quality. MMPC, computational time depends density network, number observations tuning parameters. fifth method Structural Expectation-Maximization (sem) algorithm, learning network dataset missing values. iterates sequence Expectation-Maximization (order ``fill '' holes dataset) structure learning guessed dataset, convergence. structure learning used inside SEM, due computational reasons, MMHC. Convergence SEM can controlled parameters struct.threshold param.threshold, structure parameter convergence, respectively. Search--score methods also need scoring function compute estimated measure configuration nodes. provide three popular scoring functions, BDeu (Bayesian-Dirichlet equivalent uniform, default), AIC (Akaike Information Criterion) BIC (Bayesian Information Criterion). scoring function can chosen using scoring.func parameter. Structure learning sets dag field BN study, unless bootstrap mmpc algorithm employed. cases, given possible presence loops, wpdag field set. case missing data, default behaviour (indication user) learn structure using mmhc starting raw dataset, using available cases imputation. case learning dataset containing observations dynamic system, learn.dynamic.network employed. , parameters network learnt using MAP (Maximum Posteriori) estimation (using bootstrap mmpc). See documentation learn.structure learn.params informations.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"learn a network (structure and parameters) of a BN from a BNDataset. — learn.network","text":"","code":"if (FALSE) { mydataset <- BNDataset(\"data.file\", \"header.file\")  # starting from a BN net <- BN(mydataset) net <- learn.network(net, mydataset)  # start directly from the dataset net <- learn.network(mydataset) }"},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.params.html","id":null,"dir":"Reference","previous_headings":"","what":"learn the parameters of a BN. — learn.params","title":"learn the parameters of a BN. — learn.params","text":"Learn parameters BN object according BNDataset using MAP (Maximum Posteriori) estimation.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"learn the parameters of a BN. — learn.params","text":"","code":"learn.params(bn, dataset, ess = 1, use.imputed.data = F)  # S4 method for BN,BNDataset learn.params(bn, dataset, ess = 1, use.imputed.data = FALSE)"},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"learn the parameters of a BN. — learn.params","text":"bn BN object. dataset BNDataset object. ess Equivalent Sample Size value. use.imputed.data use imputed data.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"learn the parameters of a BN. — learn.params","text":"new BN object conditional probabilities.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"learn the parameters of a BN. — learn.params","text":"Parameter learning possible case networks learnt using mmpc algorithm, bootstrap samples, may loops.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"learn the parameters of a BN. — learn.params","text":"","code":"if (FALSE) { ## first create a BN and learn its structure from a dataset dataset <- BNDataset(\"file.header\", \"file.data\") bn <- BN(dataset) bn <- learn.structure(bn, dataset) bn <- learn.params(bn, dataset, ess=1) }"},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.structure.html","id":null,"dir":"Reference","previous_headings":"","what":"learn the structure of a network. — learn.structure","title":"learn the structure of a network. — learn.structure","text":"Learn structure (directed acyclic graph) BN object according BNDataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"learn the structure of a network. — learn.structure","text":"","code":"learn.structure(   bn,   dataset,   algo = \"mmhc\",   scoring.func = \"BDeu\",   initial.network = NULL,   alpha = 0.05,   ess = 1,   bootstrap = FALSE,   layering = c(),   max.fanin = num.variables(dataset),   max.fanin.layers = NULL,   max.parents = num.variables(dataset),   max.parents.layers = NULL,   layer.struct = NULL,   cont.nodes = c(),   use.imputed.data = FALSE,   use.cpc = TRUE,   mandatory.edges = NULL,   ... )  # S4 method for BN,BNDataset learn.structure(   bn,   dataset,   algo = \"mmhc\",   scoring.func = \"BDeu\",   initial.network = NULL,   alpha = 0.05,   ess = 1,   bootstrap = FALSE,   layering = c(),   max.fanin = num.variables(dataset) - 1,   max.fanin.layers = NULL,   max.parents = num.variables(dataset) - 1,   max.parents.layers = NULL,   layer.struct = NULL,   cont.nodes = c(),   use.imputed.data = FALSE,   use.cpc = TRUE,   mandatory.edges = NULL,   ... )"},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"learn the structure of a network. — learn.structure","text":"bn BN object. dataset BNDataset. algo algorithm use. Currently, one among sm (Silander-Myllymaki), mmpc (Max-Min Parent--Children), mmhc (Max-Min Hill Climbing, default), hc (Hill Climbing) sem (Structural Expectation Maximization). scoring.func scoring function use. Currently, one among BDeu, AIC, BIC. initial.network network srtructure used starting point structure search. Can take different values: BN object, matrix containing adjacency matrix structure network, string random.chain sample random chain starting point. alpha confidence threshold (mmhc). ess Equivalent Sample Size value. bootstrap TRUE use bootstrap samples. layering vector containing layers node belongs (sm). max.fanin maximum number parents node (hc, mmhc). max.fanin.layers matrix available parents layer (sm -- DEPRECATED, use max.parents.layers instead). max.parents maximum number parents node (sm, hc, mmhc). max.parents.layers matrix available parents layer (sm). layer.struct 0/1 matrix indicating layers can contain parent nodes nodes layer (mmhc, mmpc). cont.nodes vector containing index continuous variables. use.imputed.data TRUE learn structure imputed dataset (available, check performed). Default use raw dataset use.cpc (using mmhc) compute Candidate Parent--Children sets instead  starting Hill Climbing empty graph. mandatory.edges binary matrix, 1 cell [,j] indicates edge node node j must present final network. ... potential arguments method.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"learn the structure of a network. — learn.structure","text":"new BN object DAG.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.structure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"learn the structure of a network. — learn.structure","text":"provide three algorithms order learn structure network, can chosen algo parameter. first Silander-Myllym\\\"aki (sm) exact search--score algorithm, performs complete evaluation search space order discover best network; algorithm may take long time, can inapplicable discovering networks 25--30 nodes. Even small networks, users strongly encouraged provide meaningful parameters layering nodes, maximum number parents -- refer  documentation package manual details method parameters. second method constraint-based Max-Min Parents--Children (mmpc), returns skeleton network. Given possible presence loops, due non-directionality edges discovered, parameter learning possible using algorithm. Also note case dense network lots obsevations, statistical evaluation search space may take long time. Also algorithm parameters may need tuned, mainly confidence threshold statistical pruning. Please refer rest documentation explanation. third algorithm another heuristic, Hill-Climbing (hc). can start complete space possibilities (default) reduced subset possible edges, using cpc argument. fourth algorithm (default one) Max-Min Hill-Climbing heuristic (mmhc), performs statistical sieving search space followed greedy evaluation, combining MMPC HC algorithms. considerably faster complete method, cost (likely) lower quality. MMPC, computational time depends density network, number observations tuning parameters. fifth method Structural Expectation-Maximization (sem) algorithm, learning network dataset missing values. iterates sequence Expectation-Maximization (order ``fill '' holes dataset) structure learning guessed dataset, convergence. structure learning used inside SEM, due computational reasons, MMHC. Convergence SEM can controlled parameters struct.threshold param.threshold, structure parameter convergence, respectively. learning network dataset missing values. iterates sequence Expectation-Maximization (order ``fill '' holes dataset) structure learning guessed dataset, convergence. structure learning used inside SEM, due computational reasons, MMHC. Convergence SEM can controlled parameters struct.threshold param.threshold, structure parameter convergence, respectively. Search--score methods also need scoring function compute estimated measure configuration nodes. provide three popular scoring functions, BDeu (Bayesian-Dirichlet equivalent uniform, default), AIC (Akaike Information Criterion) BIC (Bayesian Information Criterion). scoring function can chosen using scoring.func parameter. Structure learning sets dag field BN study, unless bootstrap mmpc algorithm employed. cases, given possible presence loops, wpdag field set. case missing data, default behaviour (indication user) learn structure using mmhc starting raw dataset.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/learn.structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"learn the structure of a network. — learn.structure","text":"","code":"if (FALSE) { dataset <- BNDataset(\"file.header\", \"file.data\") bn <- BN(dataset) # use MMHC bn <- learn.structure(bn, dataset, alpha=0.05, ess=1, bootstrap=FALSE)  # now use Silander-Myllymaki layers <- layering(bn) mfl <- as.matrix(read.table(header=F, text='0 1 1 1 1 0 1 1 1 1 0 0 8 7 7 0 0 0 14 6 0 0 0 0 19')) bn <- learn.structure(bn, dataset, algo='sm', max.fanin=3, cont.nodes=c(),                       layering=layers, max.fanin.layers=mfl, use.imputed.data=FALSE) }"},{"path":"https://cbg-ethz.github.io/SGS/reference/learn_bn.html","id":null,"dir":"Reference","previous_headings":"","what":"learn_bn — learn_bn","title":"learn_bn — learn_bn","text":"Outputs Bayesian network DAG CPTs","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/learn_bn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"learn_bn — learn_bn","text":"","code":"learn_bn(mydata, bdepar = list(chi = 0.5, edgepf = 2))"},{"path":"https://cbg-ethz.github.io/SGS/reference/learn_bn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"learn_bn — learn_bn","text":"mydata input data learning bdepar hyper-parameters structure learning","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/learn_bn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"learn_bn — learn_bn","text":"Bayesian network type SGS","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/loopy_belief.propagation.html","id":null,"dir":"Reference","previous_headings":"","what":"perform LOOPY belief propagation. — loopy_belief.propagation","title":"perform LOOPY belief propagation. — loopy_belief.propagation","text":"Perform belief propagation network InferenceEngine, given set observations. current version SGS, belief propagation can computed junction tree.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/loopy_belief.propagation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"perform LOOPY belief propagation. — loopy_belief.propagation","text":"","code":"loopy_belief.propagation(ie, observations = NULL, return.potentials = FALSE)  # S4 method for InferenceEngine loopy_belief.propagation(ie, observations = NULL, return.potentials = FALSE)"},{"path":"https://cbg-ethz.github.io/SGS/reference/loopy_belief.propagation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"perform LOOPY belief propagation. — loopy_belief.propagation","text":"ie InferenceEngine object. observations list observations, consisting two vector, observed.vars observed variables, observed.vals values taken variables listed observed.vars. observations provided, InferenceEngine use ones already contains. return.potentials TRUE potentials returned, instead default BN.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/loopy_belief.propagation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"perform LOOPY belief propagation. — loopy_belief.propagation","text":"updated InferenceEngine object.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/makeAllPlots.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize benchmark results — makeAllPlots","title":"Visualize benchmark results — makeAllPlots","text":"Outputs plots benchmark results different inference methods","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/makeAllPlots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize benchmark results — makeAllPlots","text":"","code":"makeAllPlots(   resultTable1,   resultTable2,   resultTable3,   resultTable4,   labelBP = c(\"1\", \"2\", \"3\", \"4\"),   labelHead = c(\"1\", \"2\", \"3\", \"4\"),   fileName = \"Test\",   width = 7,   height = 4.1,   niceBoxPlot = FALSE,   retP = FALSE )"},{"path":"https://cbg-ethz.github.io/SGS/reference/makeAllPlots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize benchmark results — makeAllPlots","text":"resultTable1 result table 1 function benchmarkMultipleNets() resultTable2 result table 2 function benchmarkMultipleNets() resultTable3 result table 3 function benchmarkMultipleNets() resultTable4 result table 4 function benchmarkMultipleNets() labelBP label labelHead label head fileName file name width figure width height figure height niceBoxPlot TRUE, fraction points (150) plotted boxplot retP TRUE, plot returned summary plot, otherwise ruturn","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/makeAllPlots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize benchmark results — makeAllPlots","text":"plot benchmark results","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/marginals.html","id":null,"dir":"Reference","previous_headings":"","what":"compute the list of inferred marginals of a BN. — marginals","title":"compute the list of inferred marginals of a BN. — marginals","text":"Given InferenceEngine, returns list containing marginals variables network, according propagated beliefs.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/marginals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute the list of inferred marginals of a BN. — marginals","text":"","code":"marginals(x, ...)  # S4 method for InferenceEngine marginals(x, ...)"},{"path":"https://cbg-ethz.github.io/SGS/reference/marginals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute the list of inferred marginals of a BN. — marginals","text":"x InferenceEngine ... potential arguments methods.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/marginals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute the list of inferred marginals of a BN. — marginals","text":"list containing marginals variable, probability tables.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/marginals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"compute the list of inferred marginals of a BN. — marginals","text":"","code":"if (FALSE) { eng <- InferenceEngine(net) marginals(eng) }"},{"path":"https://cbg-ethz.github.io/SGS/reference/name-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set name of an object. — name<-","title":"set name of an object. — name<-","text":"Set name slot object type BN BNDataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/name-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set name of an object. — name<-","text":"","code":"name(x) <- value  # S4 method for BN name(x) <- value  # S4 method for BNDataset name(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/name-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set name of an object. — name<-","text":"x object. value new name object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/name.html","id":null,"dir":"Reference","previous_headings":"","what":"get name of an object. — name","title":"get name of an object. — name","text":"Return name object, class BN BNDataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get name of an object. — name","text":"","code":"name(x)  # S4 method for BN name(x)  # S4 method for BNDataset name(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get name of an object. — name","text":"x object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get name of an object. — name","text":"name object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/node.sizes-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set the size of variables of an object. — node.sizes<-","title":"set the size of variables of an object. — node.sizes<-","text":"Set size variables BN BNDataset object. represents actual cardinality discrete variables, cardinality discretized variable continuous variables.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/node.sizes-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set the size of variables of an object. — node.sizes<-","text":"","code":"node.sizes(x) <- value  # S4 method for BN node.sizes(x) <- value  # S4 method for BNDataset node.sizes(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/node.sizes-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set the size of variables of an object. — node.sizes<-","text":"x object. value vector contaning size variable object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/node.sizes.html","id":null,"dir":"Reference","previous_headings":"","what":"get size of the variables of an object. — node.sizes","title":"get size of the variables of an object. — node.sizes","text":"Return list containing size variables object. actual cardinality discrete variables, cardinality discretized variable continuous variables.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/node.sizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get size of the variables of an object. — node.sizes","text":"","code":"node.sizes(x)  # S4 method for BN node.sizes(x)  # S4 method for BNDataset node.sizes(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/node.sizes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get size of the variables of an object. — node.sizes","text":"x object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/node.sizes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get size of the variables of an object. — node.sizes","text":"vector contaning size variable desired object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.boots-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set number of bootstrap samples of a BNDataset. — num.boots<-","title":"set number of bootstrap samples of a BNDataset. — num.boots<-","text":"Set length list samples dataset computed using bootstrap.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.boots-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set number of bootstrap samples of a BNDataset. — num.boots<-","text":"","code":"num.boots(x) <- value  # S4 method for BNDataset num.boots(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/num.boots-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set number of bootstrap samples of a BNDataset. — num.boots<-","text":"x BNDataset object. value number bootstrap samples.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.boots.html","id":null,"dir":"Reference","previous_headings":"","what":"get number of bootstrap samples of a BNDataset. — num.boots","title":"get number of bootstrap samples of a BNDataset. — num.boots","text":"Return number bootstrap samples computed dataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.boots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get number of bootstrap samples of a BNDataset. — num.boots","text":"","code":"num.boots(x)  # S4 method for BNDataset num.boots(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/num.boots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get number of bootstrap samples of a BNDataset. — num.boots","text":"x BNDataset object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.boots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get number of bootstrap samples of a BNDataset. — num.boots","text":"number bootstrap samples.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.items-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set number of items of a BNDataset. — num.items<-","title":"set number of items of a BNDataset. — num.items<-","text":"Set number observed items (rows) dataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.items-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set number of items of a BNDataset. — num.items<-","text":"","code":"num.items(x) <- value  # S4 method for BNDataset num.items(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/num.items-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set number of items of a BNDataset. — num.items<-","text":"x BNDataset object. value number items desired dataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.items.html","id":null,"dir":"Reference","previous_headings":"","what":"get number of items of a BNDataset. — num.items","title":"get number of items of a BNDataset. — num.items","text":"Return number items dataset, , number rows data slot.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get number of items of a BNDataset. — num.items","text":"","code":"num.items(x)  # S4 method for BNDataset num.items(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/num.items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get number of items of a BNDataset. — num.items","text":"x BNDataset object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.items.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get number of items of a BNDataset. — num.items","text":"number items desired dataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.nodes-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set number of nodes of an object. — num.nodes<-","title":"set number of nodes of an object. — num.nodes<-","text":"Set number nodes object type BN (number nodes network) InferenceEngine (parameter contains number nodes junction tree).","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.nodes-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set number of nodes of an object. — num.nodes<-","text":"","code":"num.nodes(x) <- value  # S4 method for BN num.nodes(x) <- value  # S4 method for InferenceEngine num.nodes(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/num.nodes-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set number of nodes of an object. — num.nodes<-","text":"x object. value number nodes object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"get number of nodes of an object. — num.nodes","title":"get number of nodes of an object. — num.nodes","text":"Return name object, class BN InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get number of nodes of an object. — num.nodes","text":"","code":"num.nodes(x)  # S4 method for BN num.nodes(x)  # S4 method for InferenceEngine num.nodes(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/num.nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get number of nodes of an object. — num.nodes","text":"x object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get number of nodes of an object. — num.nodes","text":"number nodes desired object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.time.steps-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set number of time steps of a BN or a BNDataset. — num.time.steps<-","title":"set number of time steps of a BN or a BNDataset. — num.time.steps<-","text":"Set number time steps dataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.time.steps-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set number of time steps of a BN or a BNDataset. — num.time.steps<-","text":"","code":"num.time.steps(x) <- value  # S4 method for BN num.time.steps(x) <- value  # S4 method for BNDataset num.time.steps(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/num.time.steps-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set number of time steps of a BN or a BNDataset. — num.time.steps<-","text":"x BN BNDataset object. value number time steps.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.time.steps.html","id":null,"dir":"Reference","previous_headings":"","what":"get number of time steps observed in a BN or a BNDataset. — num.time.steps","title":"get number of time steps observed in a BN or a BNDataset. — num.time.steps","text":"Return number time steps observed dataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.time.steps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get number of time steps observed in a BN or a BNDataset. — num.time.steps","text":"","code":"num.time.steps(x)  # S4 method for BN num.time.steps(x)  # S4 method for BNDataset num.time.steps(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/num.time.steps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get number of time steps observed in a BN or a BNDataset. — num.time.steps","text":"x BN BNDataset object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.time.steps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get number of time steps observed in a BN or a BNDataset. — num.time.steps","text":"number time steps.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.variables-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set number of variables of a BNDataset. — num.variables<-","title":"set number of variables of a BNDataset. — num.variables<-","text":"Set number variables observed dataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.variables-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set number of variables of a BNDataset. — num.variables<-","text":"","code":"num.variables(x) <- value  # S4 method for BNDataset num.variables(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/num.variables-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set number of variables of a BNDataset. — num.variables<-","text":"x BNDataset object. value number variables dataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.variables.html","id":null,"dir":"Reference","previous_headings":"","what":"get number of variables of a BNDataset. — num.variables","title":"get number of variables of a BNDataset. — num.variables","text":"Return number variables contained dataset. value corresponds value num.nodes network built upon dataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get number of variables of a BNDataset. — num.variables","text":"","code":"num.variables(x)  # S4 method for BNDataset num.variables(x)  # S4 method for BNDataset num.variables(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/num.variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get number of variables of a BNDataset. — num.variables","text":"x BNDataset object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/num.variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get number of variables of a BNDataset. — num.variables","text":"number variables desired dataset.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/observations-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set the list of observations of an InferenceEngine. — observations<-","title":"set the list of observations of an InferenceEngine. — observations<-","text":"Add list observations InferenceEngine, using list observations composed two following vectors: observed.varsvector observed variables; observed.valsvector values observed variables observed.vars corresponding position.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/observations-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set the list of observations of an InferenceEngine. — observations<-","text":"","code":"observations(x) <- value  # S4 method for InferenceEngine observations(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/observations-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set the list of observations of an InferenceEngine. — observations<-","text":"x InferenceEngine. value list observations InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/observations-set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"set the list of observations of an InferenceEngine. — observations<-","text":"Replace previous list observations, present. order add evidence, just replace , one must use add.observations<- method. case multiple observations variable, last observation one used, recent.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/observations.html","id":null,"dir":"Reference","previous_headings":"","what":"get the list of observations of an InferenceEngine. — observations","title":"get the list of observations of an InferenceEngine. — observations","text":"Return list observations added InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/observations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the list of observations of an InferenceEngine. — observations","text":"","code":"observations(x)  # S4 method for InferenceEngine observations(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/observations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the list of observations of an InferenceEngine. — observations","text":"x InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/observations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the list of observations of an InferenceEngine. — observations","text":"list observations InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/observations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get the list of observations of an InferenceEngine. — observations","text":"Output list following format: observed.varsvector observed variables; observed.valsvector values observed variables observed.vars corresponding position.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"plot a BN as a picture. — plot","title":"plot a BN as a picture. — plot","text":"plot BN picture.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot a BN as a picture. — plot","text":"","code":"# S3 method for BN plot(   x,   method = \"default\",   use.node.names = TRUE,   frac = 0.2,   max.weight = max(dag(x)),   node.size.lab = 14,   node.col = rep(\"white\", num.nodes(x)),   plot.wpdag = FALSE,   ... )"},{"path":"https://cbg-ethz.github.io/SGS/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot a BN as a picture. — plot","text":"x BN object. method either default qgraph. default method requires Rgraphviz package, qgraph requires qgraph package allows greater customization. use.node.names TRUE node names printed. FALSE, numbers used instead. frac minimum fraction [0,1] presence edge plotted (used case plot.wpdag=TRUE). max.weight maximum possible weight edge (used case plot.wpdag=TRUE). node.size.lab font size node labels default mode. node.col list (R) colors nodes. plot.wpdag TRUE plot network according WPDAG computed using bootstrap instead DAG. ... potential arguments using method=\"qgraph\". Please refer qgraph documentation parameters available qgraph() method.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/plot_bn.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_bn — plot_bn","title":"plot_bn — plot_bn","text":"plot DAG","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/plot_bn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_bn — plot_bn","text":"","code":"plot_bn(bn)"},{"path":"https://cbg-ethz.github.io/SGS/reference/plot_bn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_bn — plot_bn","text":"bn bn type sgs","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/plot_dag.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_dag — plot_dag","title":"plot_dag — plot_dag","text":"plot DAG","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/plot_dag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_dag — plot_dag","text":"","code":"plot_dag(DAG)"},{"path":"https://cbg-ethz.github.io/SGS/reference/plot_dag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_dag — plot_dag","text":"DAG DAG","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/print.html","id":null,"dir":"Reference","previous_headings":"","what":"print a BN, BNDataset or InferenceEngine to stdout. — print","title":"print a BN, BNDataset or InferenceEngine to stdout. — print","text":"print BN, BNDataset InferenceEngine stdout.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print a BN, BNDataset or InferenceEngine to stdout. — print","text":"","code":"# S3 method for BN print(x, ...)  # S3 method for BNDataset print(x, show.raw.data = FALSE, show.imputed.data = FALSE, ...)  # S3 method for InferenceEngine print(x, engine = \"jt\", ...)"},{"path":"https://cbg-ethz.github.io/SGS/reference/print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print a BN, BNDataset or InferenceEngine to stdout. — print","text":"x BN, BNDataset InferenceEngine. ... potential arguments. show.raw.data x BNDataset, print also raw dataset, available. show.imputed.data x BNDataset, print also imputed dataset, available. engine x InferenceEngine, specify inference engine shown. Currently engine = 'jt' supported.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/quantiles-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set the list of quantiles of an object. — quantiles<-","title":"set the list of quantiles of an object. — quantiles<-","text":"Set list quantiles BN BNDataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/quantiles-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set the list of quantiles of an object. — quantiles<-","text":"","code":"quantiles(x) <- value  # S4 method for BN quantiles(x) <- value  # S4 method for BNDataset quantiles(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/quantiles-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set the list of quantiles of an object. — quantiles<-","text":"x BN BNDataset. value list vectors.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/quantiles-set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"set the list of quantiles of an object. — quantiles<-","text":"used discretization needs performed.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"get the list of quantiles of an object. — quantiles","title":"get the list of quantiles of an object. — quantiles","text":"Return list quantiles BN BNDataset. set discretization needs performed.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the list of quantiles of an object. — quantiles","text":"","code":"quantiles(x)  # S4 method for BN quantiles(x)  # S4 method for BNDataset quantiles(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the list of quantiles of an object. — quantiles","text":"x list vectors.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the list of quantiles of an object. — quantiles","text":"list quantiles BN BNDataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/quantiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get the list of quantiles of an object. — quantiles","text":"Output list num.nodes vectors, one per variable. vector NULL corresponding variable discrete original dataset, contains cut points quantiles corresponding variable continuous.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/randomBN.html","id":null,"dir":"Reference","previous_headings":"","what":"Create random Bayesian network — randomBN","title":"Create random Bayesian network — randomBN","text":"Creates random Bayesian networks DAG simulation based bnlearn (Generates graphs whose node ordering given order labels nodes argument)","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/randomBN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create random Bayesian network — randomBN","text":"","code":"randomBN(   N_nodes,   N_neighbours = 2,   nodeDim = 2,   method = \"er\",   uniformCPTs = TRUE,   visualize = FALSE )"},{"path":"https://cbg-ethz.github.io/SGS/reference/randomBN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create random Bayesian network — randomBN","text":"N_nodes number nodes network (30 default) N_neighbours expected number neighbours per node (binary default) nodeDim number possible assignments node (binary default) method Graph type input randDAG (\"er\" default) uniformCPTs whether CPTs simulated uniform distribution visualize true, network plotted","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/randomBN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create random Bayesian network — randomBN","text":"random Bayesian network type BN()","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/raw.data-set.html","id":null,"dir":"Reference","previous_headings":"","what":"add raw data. — raw.data<-","title":"add raw data. — raw.data<-","text":"Insert raw data BNDataset object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/raw.data-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add raw data. — raw.data<-","text":"","code":"raw.data(x) <- value  # S4 method for BNDataset raw.data(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/raw.data-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add raw data. — raw.data<-","text":"x BNDataset. value matrix integers containing dataset.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/raw.data.html","id":null,"dir":"Reference","previous_headings":"","what":"get raw data of a BNDataset. — raw.data","title":"get raw data of a BNDataset. — raw.data","text":"Return raw data contained BNDataset object, .","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/raw.data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get raw data of a BNDataset. — raw.data","text":"","code":"raw.data(x)  # S4 method for BNDataset raw.data(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/raw.data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get raw data of a BNDataset. — raw.data","text":"x BNDataset.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/read.bif.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a network from a .bif file. — read.bif","title":"Read a network from a .bif file. — read.bif","text":"Read network described .bif-formatted file, build BN object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/read.bif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a network from a .bif file. — read.bif","text":"","code":"read.bif(x)  # S4 method for character read.bif(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/read.bif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a network from a .bif file. — read.bif","text":"x .bif file, absolute/relative position.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/read.bif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a network from a .bif file. — read.bif","text":"BN object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/read.bif.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a network from a .bif file. — read.bif","text":"method relies coherent ordering variable values parameters file.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/read.dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a dataset from file. — read.dataset","title":"Read a dataset from file. — read.dataset","text":"two ways build BNDataset: using two files containing respectively header informations data, manually providing data table related header informations (variable names, cardinality discreteness).","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/read.dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a dataset from file. — read.dataset","text":"","code":"read.dataset(   object,   data.file,   header.file,   data.with.header = FALSE,   na.string.symbol = \"?\",   sep.symbol = \"\",   starts.from = 1,   num.time.steps = 1 )  # S4 method for BNDataset,character,character read.dataset(   object,   data.file,   header.file,   data.with.header = FALSE,   na.string.symbol = \"?\",   sep.symbol = \"\",   starts.from = 1,   num.time.steps = 1 )"},{"path":"https://cbg-ethz.github.io/SGS/reference/read.dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a dataset from file. — read.dataset","text":"object BNDataset object. data.file data file. header.file header file. data..header TRUE first row dataset file header (e.g. contains variable names). na.string.symbol character denotes NA dataset. sep.symbol separator among values dataset. starts.starting value entries dataset (observed values, default 1). num.time.steps number instants composing observations (1, unless dynamic system).","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/read.dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a dataset from file. — read.dataset","text":"key informations needed : 1. data; 2. state variables (discrete continuous); 3. names variables; 4. cardinalities variables (discrete), number levels quantized (continuous).  Names cardinalities/leves can guessed looking data, strongly advised provide _all_ informations, order avoid problems later execution. Data can provided form data.frame matrix. can contain NAs. default, NAs indicated '?'; specify different character NAs, possible provide also na.string.symbol parameter. values contained data numeric (real continuous variables, integer discrete ones). default range values discrete variable X [1,|X|], |X| cardinality X. applies levels quantization continuous variables. value ranges data different expected ones, possible specify different starting value (whole dataset) starts.parameter. E.g. starts.=0 assume values variables dataset range [0,|X|-1]. Please keep mind internal representation SGS starts 1, original starting values lost. possible use two files, one data one metadata, instead providing manually info.  SGS requires data files format subsequently described. actual data (text file containing data ) tabular format, one tuple per row, values variable separated space tab. Values variable numbers, starting 1 case discrete variables. Data files can first row containing names corresponding variables. addition data file, header file containing additional informations can also provided. header file composed three rows tab-delimited values: 1. list names variables, order data file; 2. list integers representing cardinality variables, case discrete variables,   number levels variable quantized , case continuous variables; 3. list indicates, variable, variable continuous   (c C), thus quantized learning,   discrete (d D).","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/read.dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a dataset from file. — read.dataset","text":"","code":"if (FALSE) { dataset <- BNDataset() dataset <- read.dataset(dataset, \"file.data\", \"file.header\") }"},{"path":"https://cbg-ethz.github.io/SGS/reference/read.dsc.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a network from a .dsc file. — read.dsc","title":"Read a network from a .dsc file. — read.dsc","text":"Read network described .dsc-formatted file, build BN object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/read.dsc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a network from a .dsc file. — read.dsc","text":"","code":"read.dsc(x)  # S4 method for character read.dsc(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/read.dsc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a network from a .dsc file. — read.dsc","text":"x .dsc file, absolute/relative position.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/read.dsc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a network from a .dsc file. — read.dsc","text":"BN object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/read.dsc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a network from a .dsc file. — read.dsc","text":"method relies coherent ordering variable values parameters file.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/read.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a network from a .net file. — read.net","title":"Read a network from a .net file. — read.net","text":"Read network described .net-formatted file, build BN object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/read.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a network from a .net file. — read.net","text":"","code":"read.net(x)  # S4 method for character read.net(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/read.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a network from a .net file. — read.net","text":"x .net file, absolute/relative position.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/read.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a network from a .net file. — read.net","text":"BN object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/read.net.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a network from a .net file. — read.net","text":"method relies coherent ordering variable values parameters file.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/sample.dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"sample a BNDataset from a network of an inference engine. — sample.dataset","title":"sample a BNDataset from a network of an inference engine. — sample.dataset","text":"sample BNDataset network inference engine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/sample.dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sample a BNDataset from a network of an inference engine. — sample.dataset","text":"","code":"sample.dataset(x, n = 100, mar = 0)  # S4 method for BN sample.dataset(x, n = 100, mar = 0)  # S4 method for InferenceEngine sample.dataset(x, n = 100)"},{"path":"https://cbg-ethz.github.io/SGS/reference/sample.dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sample a BNDataset from a network of an inference engine. — sample.dataset","text":"x BN InferenceEngine object. n number items sample. mar fraction [0,1]  missing values sampled dataset  (missing random), default value 0 (missing values).","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/sample.dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sample a BNDataset from a network of an inference engine. — sample.dataset","text":"BNDataset","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/sample.row.html","id":null,"dir":"Reference","previous_headings":"","what":"sample a row vector of values for a network. — sample.row","title":"sample a row vector of values for a network. — sample.row","text":"sample row vector values network.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/sample.row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sample a row vector of values for a network. — sample.row","text":"","code":"sample.row(x, mar = 0)  # S4 method for BN sample.row(x, mar = 0)"},{"path":"https://cbg-ethz.github.io/SGS/reference/sample.row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sample a row vector of values for a network. — sample.row","text":"x BN InferenceEngine object. mar fraction [0,1] missing values sampled vector  (missing random), default value 0 (missing values).","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/sample.row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sample a row vector of values for a network. — sample.row","text":"vector values.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/sample.subGroupSampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Sub Group Sampling (SGS) in Bayesian Networks — sample.subGroupSampling","title":"Sub Group Sampling (SGS) in Bayesian Networks — sample.subGroupSampling","text":"Outputs normalizing constant given evidence Bayesian network","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/sample.subGroupSampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sub Group Sampling (SGS) in Bayesian Networks — sample.subGroupSampling","text":"","code":"sample.subGroupSampling(BayesNet, obs, N_samples = 100, plot = TRUE)"},{"path":"https://cbg-ethz.github.io/SGS/reference/sample.subGroupSampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sub Group Sampling (SGS) in Bayesian Networks — sample.subGroupSampling","text":"BayesNet Bayesian network obs List containing evidence nodes associated values N_samples Number samples plot TRUE, plot progress","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/sample.subGroupSampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sub Group Sampling (SGS) in Bayesian Networks — sample.subGroupSampling","text":"Normalizing constant vector intermediate results","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/scoring.func-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the scoring function used to learn the structure of a network. — scoring.func<-","title":"Set the scoring function used to learn the structure of a network. — scoring.func<-","text":"Set scoring function used learn.structure method.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/scoring.func-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the scoring function used to learn the structure of a network. — scoring.func<-","text":"","code":"scoring.func(x) <- value  # S4 method for BN scoring.func(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/scoring.func-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the scoring function used to learn the structure of a network. — scoring.func<-","text":"x BN object. value scoring function used.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/scoring.func-set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the scoring function used to learn the structure of a network. — scoring.func<-","text":"updated BN.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/scoring.func.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the scoring function used to learn the structure of a network. — scoring.func","title":"Read the scoring function used to learn the structure of a network. — scoring.func","text":"Read scoring function used learn.structure method. Outcome meaningful structure network learnt.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/scoring.func.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the scoring function used to learn the structure of a network. — scoring.func","text":"","code":"scoring.func(x)  # S4 method for BN scoring.func(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/scoring.func.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the scoring function used to learn the structure of a network. — scoring.func","text":"x BN object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/scoring.func.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the scoring function used to learn the structure of a network. — scoring.func","text":"scoring function used.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/shd.html","id":null,"dir":"Reference","previous_headings":"","what":"compute the Structural Hamming Distance between two adjacency matrices. — shd","title":"compute the Structural Hamming Distance between two adjacency matrices. — shd","text":"Compute Structural Hamming Distance two adjacency matrices, , distance, terms edges, two network structures. lower shd, similar two network structures.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/shd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute the Structural Hamming Distance between two adjacency matrices. — shd","text":"","code":"shd(g1, g2)"},{"path":"https://cbg-ethz.github.io/SGS/reference/shd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute the Structural Hamming Distance between two adjacency matrices. — shd","text":"g1 first adjacency matrix. g2 second adjacency matrix.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/show.html","id":null,"dir":"Reference","previous_headings":"","what":"Show method for objects. — show","title":"Show method for objects. — show","text":"show method allows provide custom aspect output generated name instance gives command R session.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/show.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show method for objects. — show","text":"","code":"show(object)"},{"path":"https://cbg-ethz.github.io/SGS/reference/show.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show method for objects. — show","text":"object object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/struct.algo-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the algorithm used to learn the structure of a network. — struct.algo<-","title":"Set the algorithm used to learn the structure of a network. — struct.algo<-","text":"Set algorithm used learn.structure method.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/struct.algo-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the algorithm used to learn the structure of a network. — struct.algo<-","text":"","code":"struct.algo(x) <- value  # S4 method for BN struct.algo(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/struct.algo-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the algorithm used to learn the structure of a network. — struct.algo<-","text":"x BN object. value scoring function used.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/struct.algo-set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the algorithm used to learn the structure of a network. — struct.algo<-","text":"updated BN.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/struct.algo.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the algorithm used to learn the structure of a network. — struct.algo","title":"Read the algorithm used to learn the structure of a network. — struct.algo","text":"Read algorithm used learn.structure method. Outcome meaningful structure network learnt.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/struct.algo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the algorithm used to learn the structure of a network. — struct.algo","text":"","code":"struct.algo(x)  # S4 method for BN struct.algo(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/struct.algo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the algorithm used to learn the structure of a network. — struct.algo","text":"x BN object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/struct.algo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the algorithm used to learn the structure of a network. — struct.algo","text":"structure learning algorithm used.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/sub_belief.propagation.html","id":null,"dir":"Reference","previous_headings":"","what":"perform SUB belief propagation. — sub_belief.propagation","title":"perform SUB belief propagation. — sub_belief.propagation","text":"Perform belief propagation network InferenceEngine, given set observations. current version SGS, belief propagation can computed junction tree.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/sub_belief.propagation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"perform SUB belief propagation. — sub_belief.propagation","text":"","code":"sub_belief.propagation(ie, observations = NULL, return.potentials = FALSE)"},{"path":"https://cbg-ethz.github.io/SGS/reference/sub_belief.propagation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"perform SUB belief propagation. — sub_belief.propagation","text":"ie InferenceEngine object. observations list observations, consisting two vector, observed.vars observed variables, observed.vals values taken variables listed observed.vars. observations provided, InferenceEngine use ones already contains. return.potentials TRUE potentials returned, instead default BN.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/sub_belief.propagation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"perform SUB belief propagation. — sub_belief.propagation","text":"updated InferenceEngine object.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/test.updated.bn.html","id":null,"dir":"Reference","previous_headings":"","what":"check if an updated BN is present in an InferenceEngine. — test.updated.bn","title":"check if an updated BN is present in an InferenceEngine. — test.updated.bn","text":"Check InferenceEngine actually contains updated network, order provide chance fallback use original network belief propagation performed. InferenceEngine built specifying set interventions contain updated BN altered structure conditional probability tables (unless computed belief propagation operation.)","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/test.updated.bn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if an updated BN is present in an InferenceEngine. — test.updated.bn","text":"","code":"test.updated.bn(x)  # S4 method for InferenceEngine test.updated.bn(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/test.updated.bn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if an updated BN is present in an InferenceEngine. — test.updated.bn","text":"x InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/test.updated.bn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if an updated BN is present in an InferenceEngine. — test.updated.bn","text":"TRUE updated network contained InferenceEngine, FALSE otherwise.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/tune.knn.impute.html","id":null,"dir":"Reference","previous_headings":"","what":"tune the parameter k of the knn algorithm used in imputation. — tune.knn.impute","title":"tune the parameter k of the knn algorithm used in imputation. — tune.knn.impute","text":"tune parameter k knn algorithm used imputation.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/tune.knn.impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tune the parameter k of the knn algorithm used in imputation. — tune.knn.impute","text":"","code":"tune.knn.impute(   data,   cat.var = 1:ncol(data),   k.min = 1,   k.max = 20,   frac.miss = 0.1,   n.iter = 20,   seed = 0 )"},{"path":"https://cbg-ethz.github.io/SGS/reference/tune.knn.impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tune the parameter k of the knn algorithm used in imputation. — tune.knn.impute","text":"data numerical matrix. cat.var vector containing categorical variables k.min minimum value k k.max maximum value k frac.miss fraction missing values add n.iter number iterations k seed random seed","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/tune.knn.impute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tune the parameter k of the knn algorithm used in imputation. — tune.knn.impute","text":"matrix error distributions","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/updated.bn-method.html","id":null,"dir":"Reference","previous_headings":"","what":"get the updated BN object contained in an InferenceEngine. — updated.bn","title":"get the updated BN object contained in an InferenceEngine. — updated.bn","text":"Return updated network contained InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/updated.bn-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the updated BN object contained in an InferenceEngine. — updated.bn","text":"","code":"updated.bn(x)  # S4 method for InferenceEngine updated.bn(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/updated.bn-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the updated BN object contained in an InferenceEngine. — updated.bn","text":"x InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/updated.bn-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the updated BN object contained in an InferenceEngine. — updated.bn","text":"updated BN object contained InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/updated.bn-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set the updated BN object contained in an InferenceEngine. — updated.bn<-","title":"set the updated BN object contained in an InferenceEngine. — updated.bn<-","text":"Add updated network InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/updated.bn-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set the updated BN object contained in an InferenceEngine. — updated.bn<-","text":"","code":"updated.bn(x) <- value  # S4 method for InferenceEngine updated.bn(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/updated.bn-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set the updated BN object contained in an InferenceEngine. — updated.bn<-","text":"x InferenceEngine. value updated BN object contained InferenceEngine.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/variables-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set variables of an object. — variables<-","title":"set variables of an object. — variables<-","text":"Set list variable names BN BNDataset object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/variables-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set variables of an object. — variables<-","text":"","code":"variables(x) <- value  # S4 method for BN variables(x) <- value  # S4 method for BNDataset variables(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/variables-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set variables of an object. — variables<-","text":"x object. value vector containing variable names object. Overwrites num.nodes slot non-matching.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/variables.html","id":null,"dir":"Reference","previous_headings":"","what":"get variables of an object. — variables","title":"get variables of an object. — variables","text":"Get list variables (names) BN BNDataset.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get variables of an object. — variables","text":"","code":"variables(x)  # S4 method for BN variables(x)  # S4 method for BNDataset variables(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get variables of an object. — variables","text":"x object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get variables of an object. — variables","text":"vector variables names desired object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/wpdag-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set WPDAG of the object. — wpdag<-","title":"set WPDAG of the object. — wpdag<-","text":"Set weighted partially directed acyclic graph network (e.g. case bootstrap dataset performed).","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/wpdag-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set WPDAG of the object. — wpdag<-","text":"","code":"wpdag(x) <- value  # S4 method for BN wpdag(x) <- value"},{"path":"https://cbg-ethz.github.io/SGS/reference/wpdag-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set WPDAG of the object. — wpdag<-","text":"x object. value matrix contaning WPDAG object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/wpdag.from.dag.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a WPDAG from a DAG. — wpdag.from.dag","title":"Initialize a WPDAG from a DAG. — wpdag.from.dag","text":"Given BN object dag, return network wpdag set CPDAG computed starting dag.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/wpdag.from.dag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a WPDAG from a DAG. — wpdag.from.dag","text":"","code":"wpdag.from.dag(x, layering = NULL)  # S4 method for BN wpdag.from.dag(x, layering = NULL)"},{"path":"https://cbg-ethz.github.io/SGS/reference/wpdag.from.dag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a WPDAG from a DAG. — wpdag.from.dag","text":"x BN object. layering vector containing layers node belongs .","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/wpdag.from.dag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a WPDAG from a DAG. — wpdag.from.dag","text":"BN object initialized wpdag.","code":""},{"path":[]},{"path":"https://cbg-ethz.github.io/SGS/reference/wpdag.from.dag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize a WPDAG from a DAG. — wpdag.from.dag","text":"","code":"if (FALSE) { net <- learn.network(dataset, layering=layering) wp.net <- wpdag.from.dag(net, layering) }"},{"path":"https://cbg-ethz.github.io/SGS/reference/wpdag.html","id":null,"dir":"Reference","previous_headings":"","what":"get the WPDAG of an object. — wpdag","title":"get the WPDAG of an object. — wpdag","text":"Return weighted partially directed acyclic graph network, available (e.g. bootstrap dataset performed).","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/wpdag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the WPDAG of an object. — wpdag","text":"","code":"wpdag(x)  # S4 method for BN wpdag(x)"},{"path":"https://cbg-ethz.github.io/SGS/reference/wpdag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the WPDAG of an object. — wpdag","text":"x object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/wpdag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the WPDAG of an object. — wpdag","text":"matrix contaning WPDAG object.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/write.dsc.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a network saving it in a .dsc file. — write.dsc","title":"Write a network saving it in a .dsc file. — write.dsc","text":"Write network disk, saving .dsc-formatted file.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/write.dsc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a network saving it in a .dsc file. — write.dsc","text":"","code":"write.dsc(x, path = \"./\")  # S4 method for BN write.dsc(x, path = \"./\")"},{"path":"https://cbg-ethz.github.io/SGS/reference/write.dsc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a network saving it in a .dsc file. — write.dsc","text":"x BN object. path relative absolute path directory created file.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/write_xgmml.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a network saving it in an XGMML file. — write_xgmml","title":"Write a network saving it in an XGMML file. — write_xgmml","text":"Write network disk, saving XGMML file, importing Cytoscape.","code":""},{"path":"https://cbg-ethz.github.io/SGS/reference/write_xgmml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a network saving it in an XGMML file. — write_xgmml","text":"","code":"write_xgmml(   x,   path = \"./network\",   write.wpdag = FALSE,   node.col = rep(\"white\", num.nodes(x)),   frac = 0.2,   max.weight = max(wpdag(x)) )  # S4 method for BN write_xgmml(   x,   path = \"./network\",   write.wpdag = FALSE,   node.col = rep(\"white\", num.nodes(x)),   frac = 0.2,   max.weight = max(wpdag(x)) )"},{"path":"https://cbg-ethz.github.io/SGS/reference/write_xgmml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a network saving it in an XGMML file. — write_xgmml","text":"x BN object. path file name relative absolute path written. write.wpdag write weighted PDAG computed using bootstrap samples MMPC  structure algorithm, instead normaldag (default FALSE). node.col vector colors node network (R colornames). frac minimum fraction [0,1] presence edge plotted (used case write.wpdag=TRUE). max.weight maximum possible weight edge (used case write.wpdag=TRUE).","code":""},{"path":"https://cbg-ethz.github.io/SGS/news/index.html","id":"sgs-v100-release-date-2022-07-26","dir":"Changelog","previous_headings":"","what":"SGS v1.0.0 (Release date: 2022-07-26)","title":"SGS v1.0.0 (Release date: 2022-07-26)","text":"First GitHub submission","code":""}]
