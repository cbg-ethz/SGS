library("devtools")
install_github("cbg-ethz/SubGroupSeparation")
usethis::edit_r_environ()
install.packages("remotes")
install.packages("remotes")
library(remotes)
library("devtools")
install_github("cbg-ethz/SubGroupSeparation")
install_github("cbg-ethz/SubGroupSeparation")
library("devtools")
Sys.setenv("R_REMOTES_NO_ERRORS_FROM_WARNINGS" = "true")
install_github("cbg-ethz/SubGroupSeparation")
library("devtools")
Sys.setenv("R_REMOTES_NO_ERRORS_FROM_WARNINGS" = "true")
devtools::install_github("cbg-ethz/SubGroupSeparation")
library("devtools")
install_github("sambofra/bnstruct")
Sys.setenv("R_REMOTES_NO_ERRORS_FROM_WARNINGS" = "false")
library("devtools")
install_github("sambofra/bnstruct")
remove.packages(bnstruct)
remove.packages("bnstruct")
library("devtools")
install_github("sambofra/bnstruct")
library(SubGroupSeparation)
library(BiDAG)
library(reshape2)
library(pcalg)
library(ggplot2)
library(Bestie)
library("usethis")
library("RColorBrewer")
library("ggpubr")
# import the Korean kidney cancer data
mutation_array <- readRDS(file = "mutation_array_processed.rds")
patienet_data <- readRDS(file = "patient_array_processed.rds")
set.seed(40)
# set structure learning learning parameters
myBdepar <- list("chi" = 4, "edgepf" = 1)
#constructing score objects
edgepmat <- string2mat(colnames(kirp), interactions, mapping, type = "pf", pf = 2)
KIRPscore <- scoreparameters("bde", kirp, bdepar = myBdepar,
edgepmat = edgepmat)
KIRCscore <- scoreparameters("bde", kirc, bdepar = myBdepar,
edgepmat = edgepmat)
#KIRP
itKirp <- iterativeMCMC(KIRPscore, mergetype = "skeleton", verbose = FALSE)
#KIRC
itKirc <- iterativeMCMC(KIRCscore, mergetype = "skeleton", verbose = FALSE)
# get the condtional probability tables (CPTs) of both graphs
kircDAGaugmented <- Bestie:::DAGparameters(itKirc$DAG, KIRCscore)
kirpDAGaugmented <- Bestie:::DAGparameters(itKirp$DAG, KIRPscore)
# convert Bayes net of Bestie to SGS format
kircBNSGS <- convertBNBestieToSGS(kircDAGaugmented)
kirpBNSGS <- convertBNBestieToSGS(kirpDAGaugmented)
